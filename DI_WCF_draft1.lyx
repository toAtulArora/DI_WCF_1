#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{color}
\definecolor{purple}{RGB}{120,20,120}
\newcommand\branchcolor[2]{{\color{#1} #2}}
\newcommand\branchpurple[1]{{\color{purple} #1}}

\usepackage{hyperref}

\hypersetup{colorlinks=true,urlcolor=blue}



%\newref{thm}{name=theorem~,Name=Theorem~,names=theorems~,Names=Theorems~}
\newref{def}{name=definition~,Name=Definition~,names=definitions~,Names=Definitions~}
\newref{alg}{name=algorithm~,Name=Algorithm~,names=algorithms~,Names=Algorithms~}
%\newref{cor}{name=corollary~,Name=Corollary~,names=corollaries~,Names=Corollaries~}
%\newref{lem}{name=lemma~,Name=Lemma~,names=lemmas~,Names=Lemmas~}
\newref{claim}{name=claim~,Name=Claim~,names=claims~,Names=Claims~}
%\newref{sec}{name=section~,Name=Section~,names=sections~,Names=Sections~}
%\newref{subsec}{name=subsection~,Name=Subsection~,names=subsections~,Names=Subsections~}
%\newref{prop}{name=proposition~,Name=Proposition~,names=propositions~,Names=Propositions~}
%\newref{conj}{name=conjecture~,Name=Conjecture~,names=conjectures~,Names=Conjectures~}
\newref{assu}{name=assumption~,Name=Assumption~,names=assumptions~,Names=Assumptions~}
%\newref{rem}{name=remark~,Name=Remark~,names=remarks~,Names=Remarks~}
%\newref{alg}{name=algorithm~,Name=Algorithm~,names=algorithms~,Names=Algorithms~}
\end_preamble
\use_default_options true
\begin_modules
theorems-ams
theorems-ams-extended
\end_modules
\maintain_unincluded_children false
\begin_local_layout
Format 66
InsetLayout Branch:commentary
  Font
    Color purple
  EndFont
  LatexName branchcolor{purple}
  LatexType command
  Requires color
End
InsetLayout Branch:proof
  Font
    Color blue
  EndFont
  LatexName branchcolor{blue}
  LatexType command
  Requires color
End
\end_local_layout
\language british
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "libertine" "default"
\font_sans "biolinum" "default"
\font_typewriter "lmtt" "default"
\font_math "libertine-ntxm" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\branch commentary
\selected 1
\filename_suffix 0
\color #faf0e6
\end_branch
\branch proof
\selected 0
\filename_suffix 0
\color #faf0e6
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\headheight 1in
\headsep 1in
\footskip 0.7in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Out of the Box | Weak Coin Flipping and friends
\end_layout

\begin_layout Abstract
We report a device independent weak coin flipping protocol
\begin_inset Foot
status open

\begin_layout Plain Layout
which are analysed 
\end_layout

\end_inset

 with 
\begin_inset Formula $P_{A}^{*}\le\cos^{2}(\pi/8)$
\end_inset

 and 
\begin_inset Formula $P_{B}^{*}\le0.667...$
\end_inset

, by making seemingly minor changes to the best known protocol due to SCAKPM'11
 [10.1103/PhysRevLett.106.220501], with 
\begin_inset Formula $P_{A}^{*}\le\cos^{2}(\pi/8)\approx0.85$
\end_inset

 and 
\begin_inset Formula $P_{B}^{*}\le3/4=0.75$
\end_inset

.
 In terms of bias, we improve the SCAKPM'11 result from 
\begin_inset Formula $\approx0.336$
\end_inset

 to 
\begin_inset Formula $\approx0.3199$
\end_inset

.
 This improvement is due to two ingredients: a self-testing (of GHZ) step
 and an extra cheat detection step for Bob.
 We also introduce a new bias suppression technique that ekes out further
 security from the abort probability to obtain ...
 Note that the SCAKPM'11 result held for both strong and weak coin flipping;
 ours holds only for the latter.
 TODO: Fix me!
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\tr}{\text{tr}}
{\text{tr}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
INTERNAL/Atul: Colour codingâ€”Purple is for informal discussions, black is
 for formal statements and blue is for proofs.
 We can remove these from the final version; I put it to minimise verbiage.
\end_layout

\begin_layout Standard
\begin_inset Branch commentary
inverted 0
status open

\begin_layout Standard
Secure two-party computation is a cryptographic setting where two parties,
 conventionally called Alice and Bob, receive inputs 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $y$
\end_inset

 and their goal is to compute some function 
\begin_inset Formula $f_{A}(x,y)$
\end_inset

 and 
\begin_inset Formula $f_{B}(x,y)$
\end_inset

 respectively which depends on both their inputs.
 However, they do not wish to reveal their inputs.
 Coin flipping (CF) is a cryptographic primitive in this setting, i.e.
 a building block for constructing more applicable secure two-party cryptographi
c schemes, where Alice and Bob wish to exchange messages and agree on a
 random bit, without trusting each other.
 A protocol that implements coin flipping must protect an honest player
 from a malicious
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
(or cheating, we use these adjectives interchangeably)
\end_layout

\end_inset

 player.
 
\end_layout

\begin_layout Standard
A weaker primitive, unsurprisingly, known as 
\emph on
weak coin flipping
\emph default
 (WCF) is where a zero corresponds to Alice winning and one corresponds
 to Bob winning.
 It is weaker because now the protocol has to protect Alice from a malicious
 Bob who tries to bias the outcome towards one (and not towards zero) and
 conversely, it must protect Bob from a malicious Alice who tries to bias
 the outcome towards zero (and not towards one).
 To emphasise the distinction, the former primitive is often termed 
\emph on
strong coin flipping
\emph default
 (SCF).
\end_layout

\begin_layout Standard
We primarily focus on WCF in this article and begin with introducing some
 notation.
 We denote by 
\begin_inset Formula $P_{A}^{*}$
\end_inset

 the highest probability of a malicious Alice convincing an honest Bob that
 she won (i.e.
 in the WCF protocol, Alice uses her best cheating strategy against Bob
 who in turn is following the protocol as described, to convince him that
 the outcome is zero).
 Analogously, 
\begin_inset Formula $P_{B}^{*}$
\end_inset

 is the highest probability of a malicious Bob convincing an honest Alice
 that he won.
 The bias of a WCF protocol is defined as 
\begin_inset Formula $\epsilon:=\max\left\{ P_{A}^{*},P_{B}^{*}\right\} -\frac{1}{2}$
\end_inset

.
 A protocol that is completely secure, has 
\begin_inset Formula $\epsilon=0$
\end_inset

 and one that is completely insecure has 
\begin_inset Formula $\epsilon=\frac{1}{2}$
\end_inset

.
\end_layout

\begin_layout Standard
Using a classical channel of communication between Alice and Bob, unless
 one makes further assumptions such as computational hardness of certain
 problems or relativistic assumptions,
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
in terms of the spatial locations of the observers; not to be confused with
 the term 
\emph on
relativising
\emph default
 from computational complexity.
\end_layout

\end_inset

 coin flipping (even weak) is impossible to implement with any security,
 to wit: for all classical protocols at least one of the parties, viz.
 a malicious Alice or a malicious Bob, can win with certainty because one
 can show 
\begin_inset Formula $\epsilon=\frac{1}{2}$
\end_inset

 (viz.
 
\begin_inset Formula $\max\{P_{A}^{*},P_{B}^{*}\}=1$
\end_inset

).
 Using a quantum channel of communication, it was shown that WCF can be
 implemented with vanishing bias.
 These works, however, do not account for noise in their implementation.
 One path towards more robust security is device independence wherein the
 players do not even trust their devices (recall, they already do not trust
 the other party).
 This is in contrast to the device independent setting considered in key
 distribution where the two parties trust each other but neither their devices
 nor the communication channel (TODO: is the classical communication channel
 trusted?).
 
\end_layout

\begin_layout Standard
In this work, we start with a device independent (DI) coin flipping (CF)
 protocol introduced
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
In fact, they introduced a device independent bit commitment protocol which
 they in turn use to construct a strong coin flipping protocol with the
 same cheating probabilities for Alice and Bob, 
\begin_inset Formula $\approx0.854$
\end_inset

 and 
\begin_inset Formula $0.75$
\end_inset

 respectively.
\end_layout

\end_inset

 in 
\begin_inset CommandInset citation
LatexCommand cite
key "Silman2011"
literal "false"

\end_inset

 which has 
\begin_inset Formula $P_{A}^{*}=\cos^{2}(\pi/8)\approx0.854$
\end_inset

 and 
\begin_inset Formula $P_{B}^{*}=3/4=0.75$
\end_inset

.
 They then compose these protocols to give a balanced protocol, i.e.
 with 
\begin_inset Formula $P_{A}^{*}=P_{B}^{*}\approx\frac{1}{2}+0.336$
\end_inset

.
 To the best of our knowledge, this DI CF protocol has the best security
 guarantee.
 While Kitaev's bound for CF rules out perfect DI CF, no lower bounds on
 the bias are known for DI WCF.
 In this work, however, we focus on improving the upper bound on the bias,
 viz.
 we give DI WCF protocols with biases 
\begin_inset Formula $\approx0.319$
\end_inset

.
\end_layout

\begin_layout Standard
We introduce two key new ideas which result in better protocols.
 The first, is the use of self-testing by one party before initiating the
 protocol and the second, is a more general technique to convert unbalanced
 protocols (i.e.
 ones in which the probability of maliciously winning for Alice and Bob
 are unequal) into balanced ones.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Proof Technique
\end_layout

\begin_layout Subsubsection*
Notation and Cheat Vectors
\end_layout

\begin_layout Standard
\begin_inset Branch commentary
inverted 0
status open

\begin_layout Standard
We introduce some notation to facilitate the discussion here.
 Denote the DI CF protocol introduced in 
\begin_inset CommandInset citation
LatexCommand cite
key "Silman2011"
literal "false"

\end_inset

 by 
\begin_inset Formula $\mathcal{I}$
\end_inset

 and let 
\begin_inset Formula $p_{A}^{*}(\mathcal{I})\approx0.853\dots$
\end_inset

 denote the maximum probability with which a malicious Alice can win against
 honest Bob who is following the protocol 
\begin_inset Formula $\mathcal{I}$
\end_inset

 and similarly, let 
\begin_inset Formula $p_{B}^{*}(\mathcal{I})\approx0.75$
\end_inset

 denote the maximum probability with which a malicious Bob can win against
 an honest Alice who is following the protocol 
\begin_inset Formula $\mathcal{I}$
\end_inset

.
 
\end_layout

\begin_layout Standard
One of the key observations we make in this work is the use of what we call
 
\begin_inset Quotes eld
\end_inset

cheat vectors
\begin_inset Quotes erd
\end_inset

â€”it is any tuple of probabilities which can arise in a CF protocol when
 one player is honest.
 More precisely, suppose Alice is (possibly) malicious and Bob follows the
 protocol 
\begin_inset Formula $\mathcal{I}$
\end_inset

.
 Then, the cheat vectors for Alice constitute the set
\begin_inset Formula 
\[
\mathbb{C}{}_{A}(\mathcal{I}):=\{(\alpha,\beta,\gamma):\exists\text{ a strategy for }A\text{ s.t. an honest }B\text{ outputs }\text{1,0, \text{ and }\ensuremath{\perp} with probabilities \ensuremath{\alpha,\beta} and \ensuremath{\gamma}}\}.
\]

\end_inset

We analogously define 
\begin_inset Formula $\mathbb{C}_{B}(\mathcal{I})$
\end_inset

.
 Cheat vectors become useful when we try to compose protocols.
 The observation then, is that the abort event can be taken to abort the
 full protocol instead of being treated as the honest player winning.
 The latter gives the malicious player further opportunity to cheat and
 so preventing it improves the security.
 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Protocols
\end_layout

\begin_layout Standard
\begin_inset Branch commentary
inverted 0
status open

\begin_layout Standard
We introduce two variants of protocol 
\begin_inset Formula $\mathcal{I}$
\end_inset

, which we call 
\begin_inset Formula $\mathcal{P}$
\end_inset

 and 
\begin_inset Formula $\mathcal{Q}$
\end_inset

.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{P}$
\end_inset

 is essentially the same as 
\begin_inset Formula $\mathcal{I}$
\end_inset

 except that Alice self-tests her boxes before starting the protocol and
 performs an additional test to ensure Bob doesn't cheat.
 We show that 
\begin_inset Formula $p_{A}^{*}(\mathcal{P})\apprle0.853\dots$
\end_inset

 and 
\begin_inset Formula $p_{B}^{*}(\mathcal{P})\apprle0.667\dots$
\end_inset

.
 We also show that 
\begin_inset Formula $\mathbb{C}_{B}(\mathcal{P})$
\end_inset

 can be cast as an SDP.
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{Q}$
\end_inset

 is also essentially the same as 
\begin_inset Formula $\mathcal{I}$
\end_inset

 except that Bob self-tests his boxes before starting the protocol.
 In this case, 
\begin_inset Formula $p_{X}^{*}(\mathcal{Q})=p_{X}^{*}(\mathcal{I})$
\end_inset

 for both values of 
\begin_inset Formula $X\in\{A,B\}$
\end_inset

 so the advantage isn't manifest.
 However, now 
\begin_inset Formula $\mathbb{C}_{A}(\mathcal{Q})$
\end_inset

 can be cast as an SDP which, as we shall see, yields an advantage when
 
\begin_inset Formula $\mathcal{Q}$
\end_inset

 is composed.
 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Compositions
\end_layout

\begin_layout Standard
\begin_inset Branch commentary
inverted 0
status open

\begin_layout Standard
As the protocols 
\begin_inset Formula $\mathcal{X}\in\{\mathcal{I},\mathcal{P},\mathcal{Q}\}$
\end_inset

 all have skewed securityâ€”either 
\begin_inset Formula $p_{A}^{*}(\mathcal{X})>p_{B}^{*}(\mathcal{X})$
\end_inset

 or the other wayâ€”and therefore the bias is determined by 
\begin_inset Formula $p_{\max}^{*}(\mathcal{X}):=\max\{p_{A}^{*}(\mathcal{X}),p_{B}^{*}(\mathcal{X})\}$
\end_inset

.
 Note that, 
\begin_inset Formula $p_{\max}^{*}(\mathcal{X})=p_{\max}^{*}(\mathcal{Y})$
\end_inset

 for all 
\begin_inset Formula $\mathcal{X},\mathcal{Y}\in\{\mathcal{I},\mathcal{P},\mathcal{Q}\}$
\end_inset

, which means that we don't immediately obtain an advantage.
 However, the most obvious method of composing these protocols to obtain
 a new protocol, which we describe later, 
\begin_inset Quotes eld
\end_inset

balances
\begin_inset Quotes erd
\end_inset

 the advantage.
 After this composition procedure is applied to some protocol 
\begin_inset Formula $\mathcal{X}$
\end_inset

, we denote the resulting protocol by 
\begin_inset Formula $C_{{\rm stand}}(\mathcal{X})$
\end_inset

.
 Applying this technique to 
\begin_inset Formula $\mathcal{P}$
\end_inset

, we already obtain a more secure protocol.
\end_layout

\begin_layout Itemize
For all 
\begin_inset Formula $X\in\{A,B\}$
\end_inset

 the cheating probabilities for protocol 
\begin_inset Formula $\mathcal{I}$
\end_inset

 under the standard composition is given by
\begin_inset Formula 
\[
p_{X}^{*}(C_{{\rm stand}}(\mathcal{I}))\approx\frac{1}{2}+0.336\dots
\]

\end_inset

while for the improved protocol 
\begin_inset Formula $\mathcal{P}$
\end_inset

, these are given by
\begin_inset Formula 
\begin{equation}
p_{X}^{*}(C_{{\rm Sikora}}(\mathcal{P}))\approx\frac{1}{2}+0.3199\dots.\label{eq:SikoraP}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The standard composition technique doesn't yield any improvement for 
\begin_inset Formula $\mathcal{Q}$
\end_inset

 because the cheating probabilities are identical to those of 
\begin_inset Formula $\mathcal{I}$
\end_inset

.
 We can extract an advantage by using a composition technique that uses
 
\begin_inset Quotes eld
\end_inset

cheat vectors
\begin_inset Quotes erd
\end_inset

 and the abort event.
 We describe it in detail later but for now, we simply denote the new protocol
 obtained using this improved composition (of protocol 
\begin_inset Formula $\mathcal{X}$
\end_inset

) by 
\begin_inset Formula $C_{{\rm Sikora}}(\mathcal{X})$
\end_inset

.
 
\end_layout

\begin_layout Itemize
Using this technique on 
\begin_inset Formula $\mathcal{Q}$
\end_inset

, the cheating probabilities become 
\begin_inset Formula 
\[
p_{X}^{*}(C_{{\rm Sikora}}(\mathcal{Q}))\approx\frac{1}{2}+0.317\dots
\]

\end_inset

for all 
\begin_inset Formula $X\in\{A,B\}$
\end_inset

, which is even better than 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:SikoraP"
plural "false"
caps "true"
noprefix "false"

\end_inset

.
 
\end_layout

\begin_layout Itemize
Finally, we combine both these protocols to obtain (again, for all 
\begin_inset Formula $X\in\{A,B\}$
\end_inset

)
\begin_inset Formula 
\[
p_{X}^{*}(C_{{\rm Sikora}}(\mathcal{Q},\mathcal{Q},\dots,\mathcal{Q},\mathcal{P}))\approx\frac{1}{2}+0.2908\dots
\]

\end_inset

where we use the same composition technique except that at the last 
\begin_inset Quotes eld
\end_inset

level
\begin_inset Quotes erd
\end_inset

 we use 
\begin_inset Formula $\mathcal{P}$
\end_inset

 instead of 
\begin_inset Formula $\mathcal{Q}$
\end_inset

.
 
\end_layout

\begin_layout Standard
TODO: Obvious questions (answers to which I don't have anymore; stupid memory):
 what about 
\begin_inset Formula $p_{X}^{*}(C_{{\rm Sikora}}(\mathcal{P}))$
\end_inset

 and 
\begin_inset Formula $p_{X}^{*}(C_{{\rm Sikora}}(\mathcal{P},\mathcal{P},\dots,\mathcal{P},\mathcal{Q}))$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
aoeu
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Itemize
Notation
\end_layout

\begin_deeper
\begin_layout Itemize
Compositions: 
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $k$
\end_inset

 compositions of 
\begin_inset Formula $\mathcal{P}$
\end_inset

, for instance, are denote by 
\begin_inset Formula $C(\mathcal{P},k)$
\end_inset

.
 When 
\begin_inset Formula $k$
\end_inset

 is suppressed, it is assumed that we pick a large enough 
\begin_inset Formula $k$
\end_inset

 such that 
\begin_inset Formula $p_{A}^{*}(C(\mathcal{P},k))\approx p_{B}^{*}(C(\mathcal{P},k))$
\end_inset

.
\end_layout

\begin_layout Itemize
Standard Composition: 
\begin_inset Formula $C_{\text{stand.}}$
\end_inset


\end_layout

\begin_layout Itemize
Sikora Composition: 
\begin_inset Formula $C_{\text{Sikora}}$
\end_inset

 (for 
\begin_inset Formula $\mathcal{P}$
\end_inset

, uses the cheat vectors for Bob and for 
\begin_inset Formula $\mathcal{Q}$
\end_inset

 uses the cheat vectors for Alice).
\end_layout

\end_deeper
\begin_layout Itemize
State of the art: 
\begin_inset Formula $\mathcal{I}$
\end_inset

 and 
\begin_inset Formula $C_{\text{stand.}}$
\end_inset

:
\begin_inset Newline newline
\end_inset


\begin_inset Formula $p_{A/B}^{*}(C_{\text{stand.}}(\mathcal{I}))\approx\frac{1}{2}+0.336\dots$
\end_inset


\end_layout

\begin_layout Itemize
Cumulative Result 1: 
\begin_inset Formula $\mathcal{P}$
\end_inset

 and 
\begin_inset Formula $C_{\text{stand.}}$
\end_inset

: 
\begin_inset Newline newline
\end_inset


\begin_inset Formula $p_{A/B}^{*}(C_{\text{stand.}}(\mathcal{P}))\approx\frac{1}{2}+0.3199\dots$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
TODO: prove that under standard composition, if 
\begin_inset Formula $p_{A}^{*}(\mathcal{P})\ge p_{B}^{*}(\mathcal{P})$
\end_inset

 then 
\begin_inset Formula $p_{A}^{*}(C_{\text{stand.}}(\mathcal{P},1))\ge p_{B}^{*}(C_{\text{stand.}}(\mathcal{P},1))$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Itemize
Cumulative Result 2: 
\begin_inset Formula $\mathcal{Q}$
\end_inset

 and 
\begin_inset Formula $C_{\text{Sikora}}$
\end_inset

:
\begin_inset Newline newline
\end_inset


\begin_inset Formula $p_{A/B}^{*}(C_{\text{Sikora}}(\mathcal{Q}))\approx\frac{1}{2}+0.317\dots$
\end_inset


\end_layout

\begin_layout Itemize
Cumulative Result 3: 
\begin_inset Formula $\mathcal{P}$
\end_inset

 at the leaves, 
\begin_inset Formula $\mathcal{Q}$
\end_inset

 otherwise and 
\begin_inset Formula $C_{\text{Sikora}}$
\end_inset

:
\begin_inset Newline newline
\end_inset


\begin_inset Formula $p_{A/B}^{*}(C_{\text{Sikora}}(\mathcal{Q},\mathcal{Q}\dots\mathcal{P}))\approx\frac{1}{2}+0.2908\dots$
\end_inset


\begin_inset Newline newline
\end_inset

where I abused the definition of 
\begin_inset Formula $C_{\text{Sikora}}$
\end_inset

 slightly.
\begin_inset Newline newline
\end_inset

TODO: perhaps output how many times I change the 
\begin_inset Quotes eld
\end_inset

polarity
\begin_inset Quotes erd
\end_inset

 of the protocol?
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Itemize
Notation
\end_layout

\begin_deeper
\begin_layout Itemize
Protocols
\end_layout

\begin_deeper
\begin_layout Itemize
Original: 
\begin_inset Formula $\mathcal{I}$
\end_inset

; 
\begin_inset Formula $p_{A}^{*}(\mathcal{I})\approx0.853\dots$
\end_inset

, 
\begin_inset Formula $p_{B}^{*}(\mathcal{I})\approx0.75$
\end_inset


\end_layout

\begin_layout Itemize
Intermediate Result | Alice self-tests + extra test: 
\begin_inset Formula $\mathcal{P}$
\end_inset

; 
\begin_inset Formula $p_{A}^{*}(\mathcal{P})\apprle0.853\dots$
\end_inset

, 
\begin_inset Formula $p_{B}^{*}(\mathcal{P})\apprle0.667\dots$
\end_inset

; 
\begin_inset Formula $\mathcal{C}_{B}(\mathcal{P})$
\end_inset

 as an SDP (but low abort probability; heavy computationally)
\end_layout

\begin_layout Itemize
Intermediate Result | Bob self-tests: 
\begin_inset Formula $p_{A/B}^{*}(\mathcal{Q})=p_{A/B}^{*}(\mathcal{I})$
\end_inset

; 
\begin_inset Formula $\mathcal{C}_{A}(\mathcal{Q})$
\end_inset

 as an SDP 
\end_layout

\end_deeper
\begin_layout Itemize
Compositions: 
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $k$
\end_inset

 compositions of 
\begin_inset Formula $\mathcal{P}$
\end_inset

, for instance, are denote by 
\begin_inset Formula $C(\mathcal{P},k)$
\end_inset

.
 When 
\begin_inset Formula $k$
\end_inset

 is suppressed, it is assumed that we pick a large enough 
\begin_inset Formula $k$
\end_inset

 such that 
\begin_inset Formula $p_{A}^{*}(C(\mathcal{P},k))\approx p_{B}^{*}(C(\mathcal{P},k))$
\end_inset

.
\end_layout

\begin_layout Itemize
Standard Composition: 
\begin_inset Formula $C_{\text{stand.}}$
\end_inset


\end_layout

\begin_layout Itemize
Sikora Composition: 
\begin_inset Formula $C_{\text{Sikora}}$
\end_inset

 (for 
\begin_inset Formula $\mathcal{P}$
\end_inset

, uses the cheat vectors for Bob and for 
\begin_inset Formula $\mathcal{Q}$
\end_inset

 uses the cheat vectors for Alice).
\end_layout

\end_deeper
\begin_layout Itemize
State of the art: 
\begin_inset Formula $\mathcal{I}$
\end_inset

 and 
\begin_inset Formula $C_{\text{stand.}}$
\end_inset

:
\begin_inset Newline newline
\end_inset


\begin_inset Formula $p_{A/B}^{*}(C_{\text{stand.}}(\mathcal{I}))\approx\frac{1}{2}+0.336\dots$
\end_inset


\end_layout

\begin_layout Itemize
Cumulative Result 1: 
\begin_inset Formula $\mathcal{P}$
\end_inset

 and 
\begin_inset Formula $C_{\text{stand.}}$
\end_inset

: 
\begin_inset Newline newline
\end_inset


\begin_inset Formula $p_{A/B}^{*}(C_{\text{stand.}}(\mathcal{P}))\approx\frac{1}{2}+0.3199\dots$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
TODO: prove that under standard composition, if 
\begin_inset Formula $p_{A}^{*}(\mathcal{P})\ge p_{B}^{*}(\mathcal{P})$
\end_inset

 then 
\begin_inset Formula $p_{A}^{*}(C_{\text{stand.}}(\mathcal{P},1))\ge p_{B}^{*}(C_{\text{stand.}}(\mathcal{P},1))$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Itemize
Cumulative Result 2: 
\begin_inset Formula $\mathcal{Q}$
\end_inset

 and 
\begin_inset Formula $C_{\text{Sikora}}$
\end_inset

:
\begin_inset Newline newline
\end_inset


\begin_inset Formula $p_{A/B}^{*}(C_{\text{Sikora}}(\mathcal{Q}))\approx\frac{1}{2}+0.317\dots$
\end_inset


\end_layout

\begin_layout Itemize
Cumulative Result 3: 
\begin_inset Formula $\mathcal{P}$
\end_inset

 at the leaves, 
\begin_inset Formula $\mathcal{Q}$
\end_inset

 otherwise and 
\begin_inset Formula $C_{\text{Sikora}}$
\end_inset

:
\begin_inset Newline newline
\end_inset


\begin_inset Formula $p_{A/B}^{*}(C_{\text{Sikora}}(\mathcal{Q},\mathcal{Q}\dots\mathcal{P}))\approx\frac{1}{2}+0.2908\dots$
\end_inset


\begin_inset Newline newline
\end_inset

where I abused the definition of 
\begin_inset Formula $C_{\text{Sikora}}$
\end_inset

 slightly.
\begin_inset Newline newline
\end_inset

TODO: perhaps output how many times I change the 
\begin_inset Quotes eld
\end_inset

polarity
\begin_inset Quotes erd
\end_inset

 of the protocol?
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Section
An illustration of a Device Dependent Weak Coin Flipping protocol
\end_layout

\begin_layout Standard
As an illustration of an interesting WCF protocol, we present the one due
 to 
\begin_inset CommandInset citation
LatexCommand cite
key "Spekkens2002"
literal "false"

\end_inset

.
 For 
\begin_inset Formula $\left|\psi\right\rangle =\frac{1}{\sqrt{2}}\left|00\right\rangle +\left(1-\frac{1}{\sqrt{2}}\right)\left|11\right\rangle $
\end_inset

 and 
\begin_inset Formula $E_{0}=\frac{1}{\sqrt{2}}\left|0\right\rangle \left\langle 0\right|$
\end_inset

, the following yields 
\begin_inset Formula $P_{A}^{*}=P_{B}^{*}=\frac{1}{\sqrt{2}}$
\end_inset

.
\begin_inset Newline newline
\end_inset


\begin_inset Graphics
	filename figures/temp_SR_1.png
	lyxscale 50
	width 50text%

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Graphics
	filename figures/temp_SR_2.png
	lyxscale 50
	width 50text%

\end_inset


\end_layout

\begin_layout Section
Device Independent Weak Coin Flipping protocols | State Of The Art
\end_layout

\begin_layout Standard
\begin_inset Branch commentary
inverted 0
status collapsed

\begin_layout Standard
In the following, we first discuss how one can describe DI WCF protocols
 in terms of the players exchanging 
\begin_inset Quotes bls
\end_inset

boxes
\begin_inset Quotes brs
\end_inset

â€”devices which take classical inputs and give classical outputs.
 Subsequently we recall the GHZ test and finally we use these to delineate
 the DI-CF due to 
\begin_inset CommandInset citation
LatexCommand cite
key "Silman2011"
literal "false"

\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Device Independence and the Box Paradigm
\end_layout

\begin_layout Standard
\begin_inset Branch commentary
inverted 0
status open

\begin_layout Standard
We describe device independent protocols as classical protocols with the
 one modification: we assume that the two parties can exchange boxes and
 that the parties can shield their boxes (from the other boxes i.e.
 the boxes can't communicate with each other once shielded).
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
TODO: Verify if this notion is in fact correct; I hope I'm not making a
 major mistake somehow.
 I should be able to take the POVMs as tensor products right, because I
 can change them at will, independent of the others (and ensuring that there's
 no communication between them; could they be somehow entangled, i.e.
 could it be that somehow the measurement operators are themselves quantum
 correlated?); I would like to reach the conclusion starting from the locality
 assumption.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Slightly anticipating the upcoming discussion, consider the following partially
 specified protocol:
\end_layout

\begin_layout Itemize
Three boxes, each of which accept a binary input and produce a binary output,
 are prepared (we do not make any assumptions on who prepares the boxes;
 when we analyse the security, we assume the adversary prepared them).
\end_layout

\begin_layout Itemize
Alice is given the first box and Bob is given the second and third boxes.
 Further, Bob ensures that his two boxes are shielded to prevent any inter-commu
nication.
 (An alternative is to keep the boxes sufficiently far so that during the
 course of the protocol, not even light can be used to communicate; but
 under such relativistic settings, CF can already be performed, making this
 discussion irrelevant).
\end_layout

\begin_layout Itemize
Bob uses local randomness (that we assume Alice cannot access) to determine
 the inputs to his box.
 
\begin_inset Newline newline
\end_inset

Using the outputs of the boxes, and possibly more randomness, she determines
 a message.
 She sends this message to Bob.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
The protocol, of course, must specify the recipes for these steps precisely
 but we don't need them here
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Alice, using the incoming message and his local randomness, determines the
 input to her box.
 Using all the information she has, she determines who won
\end_layout

\begin_layout Plain Layout
More formally, we make the following assumptions.
\end_layout

\begin_layout Plain Layout
â€”â€”â€”â€”â€”â€”
\end_layout

\begin_layout Plain Layout
Slightly anticipating the upcoming discussion, consider the following partially
 specified protocol:
\end_layout

\begin_layout Itemize
Three boxes, each of which accept a binary input and produce a binary output,
 are prepared (we do not make any assumptions on who prepares the boxes;
 when we analyse the security, we assume the adversary prepared them).
\end_layout

\begin_layout Itemize
Alice is given the first box and Bob is given the second and third boxes.
 Further, Bob ensures that his two boxes are shielded to prevent any inter-commu
nication.
 (An alternative is to keep the boxes sufficiently far so that during the
 course of the protocol, not even light can be used to communicate; but
 under such relativistic settings, CF can already be performed, making this
 discussion irrelevant).
\end_layout

\begin_layout Itemize
Alice sends 
\end_layout

\begin_layout Plain Layout
More formally, we make the following assumptions.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Definition
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Box
\end_layout

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "def:box"

\end_inset

A 
\emph on
box
\emph default
 is a device that takes an input 
\begin_inset Formula $x\in\mathcal{X}$
\end_inset

 and yields an outputs 
\begin_inset Formula $a\in\mathcal{A}$
\end_inset

 where 
\begin_inset Formula $\mathcal{X}$
\end_inset

 and 
\begin_inset Formula $\mathcal{A}$
\end_inset

 are finite sets.
 Typically, a set of 
\begin_inset Formula $n$
\end_inset

 boxes, taking inputs 
\begin_inset Formula $x_{1},x_{2},\dots x_{n}$
\end_inset

 and yielding outputs 
\begin_inset Formula $a_{1},a_{2}\dots a_{n}$
\end_inset

 are 
\emph on
characterised
\emph default
 by a joint conditional probability distribution, denoted by 
\begin_inset Formula 
\[
p(a_{1},a_{2}\dots a_{n}|x_{1},x_{2}\dots x_{n}).
\]

\end_inset

Further, if 
\begin_inset Formula $p(a_{1},a_{2}\dots a_{n}|x_{1},x_{2}\dots x_{n})=\tr\left[M_{a_{1}|x_{1}}^{1}\otimes M_{a_{2}|x_{2}}^{2}\dots\otimes M_{a_{n}|x_{n}}^{n}\rho\right]$
\end_inset

 then we call the set of boxes, 
\emph on
quantum boxes
\emph default
, where 
\begin_inset Formula $\{M_{a'|x'}^{i}\}_{a'\in\mathcal{A}_{i}}$
\end_inset

constitute a POVM for a fixed 
\begin_inset Formula $i$
\end_inset

 and 
\begin_inset Formula $x'$
\end_inset

, 
\begin_inset Formula $\rho$
\end_inset

 is a density matrix and their dimensions are mutually consistent.
\end_layout

\begin_layout Standard
Henceforth, we restrict ourselves to quantum boxes.
 
\end_layout

\begin_layout Definition
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Protocol in the box formalism
\end_layout

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "def:BoxProtocol"

\end_inset

A generic two-party protocol in the box formalism has the following form:
\end_layout

\begin_deeper
\begin_layout Enumerate
Inputs:
\end_layout

\begin_deeper
\begin_layout Enumerate
Alice is given boxes 
\begin_inset Formula $\Box_{1}^{A},\Box_{2}^{A}\dots\Box_{p}^{A}$
\end_inset

 and Bob is given boxes 
\begin_inset Formula $\Box_{1}^{B},\Box_{2}^{B},\dots\Box_{q}^{B}$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
Alice is given a random string 
\begin_inset Formula $r^{A}$
\end_inset

 and Bob is given a random string 
\begin_inset Formula $r^{B}$
\end_inset

 (of arbitrary but finite length).
\end_layout

\end_deeper
\begin_layout Enumerate
Structure: At each round of the protocol, the following is allowed.
\end_layout

\begin_deeper
\begin_layout Enumerate
Alice and Bob can locally perform arbitrary but finite time computations
 on a Turing Machine.
 
\end_layout

\begin_layout Enumerate
They can exchange classical strings/messages and boxes.
\end_layout

\end_deeper
\end_deeper
\begin_layout Definition
\begin_inset Branch commentary
inverted 0
status open

\begin_layout Standard
A protocol in the box formalism is readily expressed as a protocol which
 uses a (trusted) classical channel (i.e.
 they trust their classical devices to reliably send/receive messages),
 untrusted quantum devices and an untrusted quantum channel (i.e.
 a channel that can carry quantum states but may be controlled by the adversary).
\end_layout

\end_inset


\end_layout

\begin_layout Assumption
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Setup of Device Independent Two-Party Protocols
\end_layout

\end_inset

 Alice and Bob 
\end_layout

\begin_deeper
\begin_layout Enumerate
both have private sources of randomness,
\end_layout

\begin_layout Enumerate
can send and receive classical messages over a (trusted) classical channel,
\end_layout

\begin_layout Enumerate
can prevent parts of their untrusted quantum devices from communicating
 with each other, and
\end_layout

\begin_layout Enumerate
have access to an untrusted quantum channel.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Branch commentary
inverted 0
status open

\begin_layout Standard
We restrict ourselves to a 
\begin_inset Quotes bls
\end_inset

measure and exchange
\begin_inset Quotes brs
\end_inset

 class of protocolsâ€”protocols where Alice and Bob start with some pre-prepared
 states and subsequently, only perform classical computation and quantum
 measurements locally in conjunction with exchanging classical and quantum
 messages.
 More precisely, we consider the following (likely restricted) class of
 device independent protocols.
\end_layout

\end_inset


\end_layout

\begin_layout Definition
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Measure and Exchange (Device Independent Two-Party) Protocols
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "def:MEprotocol"

\end_inset

 A 
\emph on
measure and exchange (device independent two-party) protocol
\emph default
 has the following form:
\end_layout

\begin_deeper
\begin_layout Enumerate
Inputs:
\end_layout

\begin_deeper
\begin_layout Enumerate
Alice is given quantum registers 
\begin_inset Formula $A_{1},A_{2},\dots A_{p}$
\end_inset

 together with POVMs
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
For concreteness, take the case of binary measurements.
 By 
\begin_inset Formula $\{M_{a|x}^{A_{1}}\}_{a}$
\end_inset

, for instance, we mean 
\begin_inset Formula $\{M_{0|x}^{A_{1}},M_{1|x}^{A_{1}}\}$
\end_inset

 is a POVM for 
\begin_inset Formula $x\in\{0,1\}$
\end_inset

.
 
\end_layout

\end_inset

 
\begin_inset Formula 
\[
\{M_{a|x}^{A_{1}}\}_{a},\{M_{a|x}^{A_{2}}\}_{a},\dots\{M_{a|x}^{A_{p}}\}_{a}
\]

\end_inset

which act on them and Bob is, analogously, given quantum registers 
\begin_inset Formula $B_{1},B_{2},\dots B_{q}$
\end_inset

 together with POVMs 
\begin_inset Formula 
\[
\{M_{b|y}^{B_{1}}\}_{b},\{M_{b|y}^{B_{2}}\}_{b},\dots,\{M_{b|y}^{B_{q}}\}_{b}.
\]

\end_inset

Alice shields 
\begin_inset Formula $A_{1},A_{2},\dots A_{p}$
\end_inset

 (and the POVMs) from each other and from Bob's lab.
 Bob similarly shields 
\begin_inset Formula $B_{1},B_{2}\dots B_{q}$
\end_inset

 (and the POVMs) from each other and from Alice's lab.
\end_layout

\begin_layout Enumerate
Alice is given a random string 
\begin_inset Formula $r^{A}$
\end_inset

 and Bob is given a random string 
\begin_inset Formula $r^{B}$
\end_inset

 (of arbitrary but finite length).
\end_layout

\end_deeper
\begin_layout Enumerate
Structure: At each round of the protocol, the following is allowed.
\end_layout

\begin_deeper
\begin_layout Enumerate
Alice and Bob can locally perform arbitrary but finite time computations
 on a Turing Machine.
\end_layout

\begin_layout Enumerate
They can exchange classical strings/messages.
\end_layout

\begin_layout Enumerate
Alice (for instance) can 
\end_layout

\begin_deeper
\begin_layout Enumerate
send a register 
\begin_inset Formula $A_{l}$
\end_inset

 and the encoding of her POVMs 
\begin_inset Formula $\{M_{i}^{A_{l}}\}_{i}$
\end_inset

 to Bob, or
\end_layout

\begin_layout Enumerate
receive a register 
\begin_inset Formula $B_{m}$
\end_inset

 and the encoding of the POVMs 
\begin_inset Formula $\{M_{i}^{B_{m}}\}_{i}$
\end_inset

.
 
\end_layout

\begin_layout Standard
Analogously for Bob.
 
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Standard
It is clear that a protocol in the box formalism (
\begin_inset CommandInset ref
LatexCommand formatted
reference "def:BoxProtocol"
plural "false"
caps "true"
noprefix "false"

\end_inset

) which uses only quantum boxes (
\begin_inset CommandInset ref
LatexCommand formatted
reference "def:box"
plural "false"
caps "true"
noprefix "false"

\end_inset

) can be implemented as a measure and exchange protocol (
\begin_inset CommandInset ref
LatexCommand formatted
reference "def:MEprotocol"
plural "false"
caps "true"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Subsection
The GHZ Test
\end_layout

\begin_layout Standard
\begin_inset Branch commentary
inverted 0
status open

\begin_layout Standard
Before we define the current best DI CF protocol, we briefly remind the
 reader of the GHZ test, upon which the aforementioned protocol depends,
 and set up some conventions.
\end_layout

\end_inset


\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:GHZ-box"

\end_inset

Suppose we are given three boxes, 
\begin_inset Formula $\Box^{A},\Box^{B}$
\end_inset

 and 
\begin_inset Formula $\Box^{C}$
\end_inset

, which accept binary inputs 
\begin_inset Formula $a,b,c\in\{0,1\}$
\end_inset

 and produces binary output 
\begin_inset Formula $x,y,z\in\{0,1\}$
\end_inset

 respectively.
 The boxes pass the GHZ test if 
\begin_inset Formula $a\oplus b\oplus c=xyz\oplus1$
\end_inset

, given the inputs satisfy 
\begin_inset Formula $x\oplus y\oplus z=1$
\end_inset

.
\end_layout

\begin_layout Claim
\begin_inset CommandInset label
LatexCommand label
name "claim:Quantum-boxes-pass"

\end_inset

Quantum boxes pass the GHZ test with certainty (even if they cannot communicate)
, for the state 
\begin_inset Formula $\left|\psi\right\rangle _{ABC}=\frac{\left|000\right\rangle _{ABC}+\left|111\right\rangle _{ABC}}{\sqrt{2}}$
\end_inset

, and measurement
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
we added the identity so that the eigenvalues associated become 
\begin_inset Formula $0,1$
\end_inset

 instead of 
\begin_inset Formula $-1,1$
\end_inset

.
\end_layout

\end_inset

 
\begin_inset Formula $\frac{\sigma_{x}+\mathbb{I}}{2}$
\end_inset

 for input 
\begin_inset Formula $0$
\end_inset

 and 
\begin_inset Formula $\frac{\sigma_{y}+\mathbb{I}}{2}$
\end_inset

 for input 
\begin_inset Formula $1$
\end_inset

 (in the notation introduced earlier, 
\begin_inset Formula $M_{0|0}^{A}=\left|+\right\rangle \left\langle +\right|,M_{1|0}^{A}=\left|-\right\rangle \left\langle -\right|$
\end_inset

 and so on, where 
\begin_inset Formula $\left|\pm\right\rangle =\frac{\left|0\right\rangle \pm\left|1\right\rangle }{\sqrt{2}}$
\end_inset

).
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
TODO: Think: Should I add the classical value? This would require me to
 add what it means to have a classical box.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch commentary
inverted 0
status open

\begin_layout Standard
The proof is easier to see in the case where the outcomes are 
\begin_inset Formula $\pm1$
\end_inset

; it follows from the observations that 
\begin_inset Formula $\sigma_{y}\otimes\sigma_{y}\otimes\sigma_{y}\left|\psi\right\rangle =-\left|\psi\right\rangle $
\end_inset

, 
\begin_inset Formula $\sigma_{x}\otimes\sigma_{x}\otimes\sigma_{x}\left|\psi\right\rangle =\left|\psi\right\rangle $
\end_inset

 and the anti-commutation of 
\begin_inset Formula $\sigma_{x}$
\end_inset

 and 
\begin_inset Formula $\sigma_{y}$
\end_inset

 matrices, i.e.
 
\begin_inset Formula $\sigma_{x}\sigma_{y}+\sigma_{y}\sigma_{x}=0$
\end_inset

.
 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
The Protocol
\end_layout

\begin_layout Standard
\begin_inset Branch commentary
inverted 0
status open

\begin_layout Standard
The best DI CF protocol known is the one introduced in 
\begin_inset CommandInset citation
LatexCommand cite
key "Silman2011"
literal "false"

\end_inset

.
 While this is a protocol for SCF, and so also works as a WCF protocol,
 we do not know of any better protocol for the latter.
\end_layout

\end_inset


\end_layout

\begin_layout Algorithm
\begin_inset Argument 1
status open

\begin_layout Plain Layout
SCF, original
\end_layout

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "alg:SCForiginal"

\end_inset

Alice has one box and Bob has two boxes (in the security analysis, we let
 the cheating player distribute the boxes).
 Each box takes one binary input and gives one binary output.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Alice chooses 
\begin_inset Formula $x\in_{R}\{0,1\}$
\end_inset

 and inputs it into her box to obtain 
\begin_inset Formula $a$
\end_inset

.
 She chooses 
\begin_inset Formula $r\in_{R}\{0,1\}$
\end_inset

 to compute 
\begin_inset Formula $s=a\oplus x.r$
\end_inset

 and sends 
\begin_inset Formula $s$
\end_inset

 to Bob.
\end_layout

\begin_layout Enumerate
Bob chooses 
\begin_inset Formula $g\in_{R}\{0,1\}$
\end_inset

 (for 
\begin_inset Quotes eld
\end_inset

guess
\begin_inset Quotes erd
\end_inset

) and sends it to Alice.
\end_layout

\begin_layout Enumerate
Alice sends 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $a$
\end_inset

 to Bob.
 They both compute the output 
\begin_inset Formula $x\oplus g$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
Test round
\end_layout

\begin_deeper
\begin_layout Enumerate
Bob tests if 
\begin_inset Formula $s=a$
\end_inset

 or 
\begin_inset Formula $s=a\oplus x$
\end_inset

.
 If the test fails, he aborts.
 Bob chooses 
\begin_inset Formula $b,c\in_{R}\{0,1\}$
\end_inset

 such that 
\begin_inset Formula $a\oplus b\oplus c=1$
\end_inset

 and then performs a GHZ using 
\begin_inset Formula $a,b,c$
\end_inset

 as the inputs and 
\begin_inset Formula $x,y,z$
\end_inset

 as the output from the three boxes.
 He aborts if this test fails.
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
From 
\begin_inset CommandInset ref
LatexCommand formatted
reference "claim:Quantum-boxes-pass"
plural "false"
caps "true"
noprefix "false"

\end_inset

, it is clear that when both players follow 
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:SCForiginal"
plural "false"
caps "true"
noprefix "false"

\end_inset

 using GHZ boxes (
\begin_inset CommandInset ref
LatexCommand formatted
reference "def:GHZ-box"
plural "false"
caps "true"
noprefix "false"

\end_inset

), Bob never aborts and they win with equal probabilities.
 The security of the protocol is summarised next.
\end_layout

\begin_layout Lemma
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Security of SCF
\end_layout

\end_inset

 
\begin_inset CommandInset citation
LatexCommand citep
key "Silman2011"
literal "false"

\end_inset

 For 
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:SCForiginal"
plural "false"
caps "true"
noprefix "false"

\end_inset

, 
\begin_inset Formula $P_{B}^{*}\le\frac{3}{4}$
\end_inset

 and 
\begin_inset Formula $P_{A}^{*}\le\cos^{2}(\pi/8)$
\end_inset

.
 Further, both bounds are saturated by a quantum strategy which uses a GHZ
 state and the honest player measures along the 
\begin_inset Formula $\sigma_{x}/\sigma_{y}$
\end_inset

 basis corresponding to input 
\begin_inset Formula $0/1$
\end_inset

 into the box.
 Cheating Alice measures along 
\begin_inset Formula $\sigma_{\hat{n}}$
\end_inset

 for 
\begin_inset Formula $\hat{n}=\frac{1}{\sqrt{2}}(\hat{x}+\hat{y})$
\end_inset

 while cheating Bob measures his first box along 
\begin_inset Formula $\sigma_{x}$
\end_inset

 and second along 
\begin_inset Formula $\sigma_{y}$
\end_inset

.
 
\begin_inset CommandInset label
LatexCommand label
name "lem:SCFstandard"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch commentary
inverted 0
status open

\begin_layout Standard
Note that both players can cheat maximally assuming they share a GHZ state
 and the honest player measures along the associated basis.
 This entails that even though the cheating player could potentially tamper
 with the boxes before handing them to the honest player, surprisingly,
 exploiting this freedom does not offer any advantage to the cheating player.
 
\end_layout

\end_inset


\end_layout

\begin_layout Section
First Technique: Self-testing and its limitations
\end_layout

\begin_layout Subsection
Idea
\end_layout

\begin_layout Standard
\begin_inset Branch commentary
inverted 0
status open

\begin_layout Standard
We make two observations.
 
\end_layout

\begin_layout Standard
First, in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:SCForiginal"
plural "false"
caps "true"
noprefix "false"

\end_inset

 only Bob performs the test round.
 In WCF, there is a notion of Alice winning and Bob winning.
 Thus, if 
\begin_inset Formula $x\oplus g=0$
\end_inset

, i.e.
 the outcome corresponding to 
\begin_inset Quotes bls
\end_inset

Alice wins
\begin_inset Quotes brs
\end_inset

, we can imagine that Bob continues to perform the test to ensure (at least
 to some extend) that Alice did not cheat.
 However, if 
\begin_inset Formula $x\oplus g=1$
\end_inset

, i.e.
 the outcome corresponding to 
\begin_inset Quotes bls
\end_inset

Bob wins
\begin_inset Quotes brs
\end_inset

, we can require Alice to now complete the GHZ test to ensure that Bob did
 not cheat.
 It turns out that this does not lower 
\begin_inset Formula $P_{B}^{*}$
\end_inset

.
 Interestingly, the best cheating strategy deviates from the GHZ state and
 measurements for the honest player.
 We omit the details here (see TODO: write this down somewhere) but mention
 this to motivate the following.
 
\end_layout

\begin_layout Standard
Second, Alice (say) can harness the self-testing property of GHZ states
 and measurements to ensure that Bob has not tampered with her boxes.
 One way of proceeding is that 
\begin_inset Formula $N$
\end_inset

 copies of the supposedly correct boxes are distributed.
 Alice now picks one out of these 
\begin_inset Formula $N$
\end_inset

 boxes at random and asks Bob to send the associated two boxes to each 
\begin_inset Formula $N-1$
\end_inset

 box that Alice posses.
 Alice runs the GHZ test on each box and if even one test fails, she declares
 that Bob cheated.
 This way, for a large 
\begin_inset Formula $N$
\end_inset

, Alice can ensure with near certainty, that she has a box containing the
 correct state and (which performs the correct) measurements.
 Note that no such scheme can be concocted which simultaneously self-tests
 Alice and Bob's boxes.
 More precisely, no such procedure can ensure that Alice and Bob share a
 GHZ state (Alice one part, Bob the other two, for instance) because this
 would mean perfect (or near perfect) SCF is possible which is forbidden
 even in the device dependent case.
 Kitaev showed that for any SCF protocol, 
\begin_inset Formula $\epsilon\ge\frac{1}{\sqrt{2}}-\frac{1}{2}$
\end_inset

.
\end_layout

\begin_layout Standard
Combining these two observations, results in an improvement in the security
 for Alice.
 We obtain a protocol with 
\begin_inset Formula $P_{A}^{*}\le3/4$
\end_inset

, which is the same as before, but 
\begin_inset Formula $P_{B}^{*}\apprle0.667...$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Protocols (single shot, unbalanced)
\end_layout

\begin_layout Standard
In the honest implementation, the 
\emph on
trio
\emph default
 of boxes used in the following are characterised by the GHZ setup (see
 
\begin_inset CommandInset ref
LatexCommand formatted
reference "claim:Quantum-boxes-pass"
plural "false"
caps "true"
noprefix "false"

\end_inset

).
 
\end_layout

\begin_layout Algorithm
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Alice self-tests her boxes
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "alg:AliceSelfTestsHerBoxes"

\end_inset

There are 
\begin_inset Formula $N$
\end_inset

 trios of boxes; Alice has the first part and Bob has the remaining two
 parts, of each trio.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Alice selects a number 
\begin_inset Formula $i\in_{R}\{1,2\dots N\}$
\end_inset

 and sends it to Bob.
\end_layout

\begin_layout Enumerate
Bob sends his part of the trio of boxes corresponding to 
\begin_inset Formula $\{1,2\dots N\}\backslash i$
\end_inset

, i.e.
 he sends all the boxes, except the ones corresponding to the trio 
\begin_inset Formula $i$
\end_inset

.
\end_layout

\begin_layout Enumerate
Alice performs a GHZ test on all the trios labelled 
\begin_inset Formula $\left\{ 1,2\dots N\right\} \backslash i$
\end_inset

, i.e.
 all the trios except the 
\begin_inset Formula $i$
\end_inset

th.
\end_layout

\begin_layout Standard
We restrict ourselves to the 
\begin_inset Formula $i$
\end_inset

th trio.
 Alice has one box and Bob has two boxes.
 Each box takes one binary input and gives one binary output.
 
\end_layout

\begin_layout Enumerate
Alice chooses 
\begin_inset Formula $x\in_{R}\{0,1\}$
\end_inset

 and inputs it into her box to obtain 
\begin_inset Formula $a$
\end_inset

.
 She chooses 
\begin_inset Formula $r\in_{R}\{0,1\}$
\end_inset

 to compute 
\begin_inset Formula $s=a\oplus x.r$
\end_inset

 and sends 
\begin_inset Formula $s$
\end_inset

 to Bob.
\end_layout

\begin_layout Enumerate
Bob chooses 
\begin_inset Formula $g\in_{R}\{0,1\}$
\end_inset

 (for 
\begin_inset Quotes eld
\end_inset

guess
\begin_inset Quotes erd
\end_inset

) and sends it to Alice.
\end_layout

\begin_layout Enumerate
Alice sends 
\begin_inset Formula $x$
\end_inset

 [EDIT: maybe not send 
\begin_inset Formula $a$
\end_inset

] and 
\begin_inset Formula $a$
\end_inset

 to Bob.
 They both compute the output 
\begin_inset Formula $x\oplus g$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
Test rounds:
\end_layout

\begin_deeper
\begin_layout Enumerate
If 
\begin_inset Formula $x\oplus g=0$
\end_inset

:
\begin_inset Newline newline
\end_inset

[EDIT: Send 
\begin_inset Formula $a$
\end_inset

]
\begin_inset Newline newline
\end_inset

Bob tests if 
\begin_inset Formula $s=a$
\end_inset

 or 
\begin_inset Formula $s=a\oplus x$
\end_inset

.
 If the test fails, he aborts.
 Bob chooses 
\begin_inset Formula $b,c\in_{R}\{0,1\}$
\end_inset

 such that 
\begin_inset Formula $a\oplus b\oplus c=1$
\end_inset

 and then performs a GHZ using 
\begin_inset Formula $a,b,c$
\end_inset

 as the inputs and 
\begin_inset Formula $x,y,z$
\end_inset

 as the output from the three boxes.
 He aborts if this test fails.
\end_layout

\begin_layout Enumerate
Else, if 
\begin_inset Formula $x\oplus g=1$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Enumerate
Alice chooses 
\begin_inset Formula $y,z\in_{R}\{0,1\}$
\end_inset

 s.t.
 
\begin_inset Formula $x\oplus y\oplus z=1$
\end_inset

 and sends them to Bob.
\end_layout

\begin_layout Enumerate
Bob inputs 
\begin_inset Formula $y,z$
\end_inset

 into his boxes, obtains and sends 
\begin_inset Formula $b,c$
\end_inset

 to Alice.
\end_layout

\begin_layout Standard
Alice tests if 
\begin_inset Formula $x,y,z$
\end_inset

 as inputs and 
\begin_inset Formula $a,b,c$
\end_inset

 as outputs, satisfy the GHZ test.
 She aborts if this test fails.
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Lemma
For 
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:AliceSelfTestsHerBoxes"
plural "false"
caps "true"
noprefix "false"

\end_inset

, Alice's cheating probability 
\begin_inset Formula $P_{A}^{*}\le\cos^{2}(\pi/8)\approx0.852$
\end_inset

 and Bob's cheating probability 
\begin_inset Formula $P_{B}^{*}\apprle0.667...$
\end_inset

.
\end_layout

\begin_layout Proof
The analysis for cheating Alice is the same as the original protocol.
 We consider the analysis for cheating Bob.
 We call the tuple 
\begin_inset Formula $(\alpha,\beta,\gamma)$
\end_inset

 a 
\emph on
cheat vector
\emph default
 if for some cheating strategy of Bob,
\begin_inset Formula 
\begin{align*}
\alpha & =\Pr[\text{Alice outputs }0]\\
\beta & =\Pr[\text{Alice outputs }1]\\
\gamma & =\Pr[\text{Alice aborts}].
\end{align*}

\end_inset

We model Alice's steps as follows: We use 
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $\left|+\right\rangle _{x}$
\end_inset

 for her choice of input 
\begin_inset Formula $x$
\end_inset

, 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\left|+\right\rangle _{r}$
\end_inset

 for her choice of 
\begin_inset Formula $r$
\end_inset

, 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\frac{1}{2}\mathbb{I}_{H}$
\end_inset

 for her part of the GHZ state
\end_layout

\begin_layout Itemize
\begin_inset Formula $\left|0\right\rangle _{s}$
\end_inset

 a qubit to be used to send 
\begin_inset Formula $s$
\end_inset

 to Bob
\end_layout

\begin_layout Itemize
\begin_inset Formula $\left|0\right\rangle _{a}$
\end_inset

 the outcome of Alice's GHZ state measurement
\end_layout

\end_deeper
\begin_layout Proof
The argument proceeds as follows.
 Let 
\begin_inset Formula $\rho_{0}$
\end_inset

 be Alice's state after measuring to get and creating 
\begin_inset Formula $s$
\end_inset

 (TODO: complete this part; likely in the code already).
\end_layout

\begin_deeper
\begin_layout Enumerate
Observe that 
\begin_inset Formula $\tr_{s}(\rho_{0})$
\end_inset

 can be used to denote Alice's state after sending 
\begin_inset Formula $s$
\end_inset

 to Bob.
 This is because Bob can hold a purification of 
\begin_inset Formula $\tr_{s}(\rho_{0})$
\end_inset

 thereby holding 
\begin_inset Formula $s$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
Similarly, observe that Bob sending a the variable 
\begin_inset Formula $g$
\end_inset

 can be modelled as 
\begin_inset Formula $\tr_{g}(\rho_{1})=\tr_{s}(\rho_{0})$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
While on the third step, Alice sends 
\begin_inset Formula $x$
\end_inset

 to Bob, we need not formally include this because if Alice is testing Bob,
 he knows 
\begin_inset Formula $x\oplus g=1$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
Test rounds
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula $x\oplus g=0$
\end_inset

 is the case where Alice outputs 
\begin_inset Formula $0$
\end_inset

; this means Bob already failed; not the event we are interested in.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $x\oplus g=1$
\end_inset

 is the case where Alice tests Bob.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
While Alice sends 
\begin_inset Formula $y$
\end_inset

 and 
\begin_inset Formula $z$
\end_inset

 to Bob, 
\begin_inset Formula $z$
\end_inset

 can be determined from the condition 
\begin_inset Formula $x\oplus y\oplus z=1$
\end_inset

 and the values of 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $y$
\end_inset

.
 Therefore, formally, it suffices that Alice appends 
\begin_inset Formula $\frac{1}{2}\mathbb{I}_{y}$
\end_inset

 to 
\begin_inset Formula $\rho_{1}$
\end_inset

 to account for this step.
\end_layout

\begin_layout Enumerate
Bob is supposed to respond with 
\begin_inset Formula $b,c$
\end_inset

 but formally, it suffices to send 
\begin_inset Formula $d=b\oplus c$
\end_inset

 because the GHZ condition only requires Alice to test 
\begin_inset Formula $a\oplus b\oplus c=xyz\oplus1$
\end_inset

.
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Proof
The SDP is therefore 
\end_layout

\begin_layout Proof
Note: 
\end_layout

\begin_layout Standard
We defer the proof to 
\begin_inset CommandInset ref
LatexCommand formatted
reference "subsec:SDP-when-Alice"
plural "false"
caps "true"
noprefix "false"

\end_inset

.
 
\begin_inset Branch commentary
inverted 0
status open

\begin_layout Standard
The analysis for a cheating Bob, 
\begin_inset Formula $P_{B}^{*}$
\end_inset

, is easily cast as an SDP thanks to the self-testing step.
 The analysis for cheating Alice, 
\begin_inset Formula $P_{A}^{*}$
\end_inset

, is the same as the one for the original protocol.
 
\end_layout

\end_inset

 Using a standard composition technique, which we outline in the following
 section, the cheating probabilities can be balanced.
 The key idea is to repeat the unbalanced protocol and appropriately alternate
 between giving the advantage to Alice and Bob.
 The resulting bias is 
\begin_inset Formula $0.319...$
\end_inset

.
\end_layout

\begin_layout Section
Second Technique: Suppression Technique
\end_layout

\begin_layout Standard
\begin_inset Branch commentary
inverted 0
status collapsed

\begin_layout Standard
Consider a WCF protocol, 
\begin_inset Formula $\mathcal{P}_{A}$
\end_inset

, where the success probability of cheating Alice is greater than that of
 cheating Bob.
 We denote this by 
\begin_inset Formula 
\[
p_{A}^{*}(\mathcal{P}_{A})=\alpha>\beta=p_{B}^{*}(\mathcal{P}_{A}).
\]

\end_inset

The subscript 
\begin_inset Formula $A$
\end_inset

 in 
\begin_inset Formula $\mathcal{P}_{A}$
\end_inset

 simply represents that Alice has the advantage.
 By 
\begin_inset Formula $\mathcal{P}_{B}$
\end_inset

 we denote the same protocol is run with Alice's and Bob's roles swapped.
 Thus, 
\begin_inset Formula 
\[
p_{A}^{*}(\mathcal{P}_{B})=\beta<\alpha=p_{B}^{*}(\mathcal{P}_{B}).
\]

\end_inset

One can compose these protocols, into a new protocol 
\begin_inset Formula $\mathcal{P}'_{A}$
\end_inset

 as follows (see 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:Standard-composition-technique"
plural "false"
caps "true"
noprefix "false"

\end_inset

): Alice and Bob run 
\begin_inset Formula $\mathcal{P}_{A}$
\end_inset

 (to decide whether they run 
\begin_inset Formula $\mathcal{P}_{A}$
\end_inset

 in the subsequent round or 
\begin_inset Formula $\mathcal{P}_{B}$
\end_inset

).
 If the outcome is 
\begin_inset Formula $A$
\end_inset

, they run 
\begin_inset Formula $\mathcal{P}_{A}$
\end_inset

 and if the outcome is 
\begin_inset Formula $B$
\end_inset

, they run 
\begin_inset Formula $\mathcal{P}_{B}$
\end_inset

.
 The outcome of this round, determines the outcome of the full protocol.
 It is easy to see that 
\begin_inset Formula 
\begin{align*}
p_{A}^{*}(\mathcal{P}'_{A}) & =\alpha^{2}+(1-\alpha)\beta=:\alpha^{(1)},\quad\text{and}\\
p_{B}^{*}(\mathcal{P}'_{A}) & =\beta\alpha+(1-\beta)\beta=:\beta^{(1)}.
\end{align*}

\end_inset

One can repeat this procedure with 
\begin_inset Formula $\mathcal{P}'_{A}$
\end_inset

 and 
\begin_inset Formula $\mathcal{P}'_{B}$
\end_inset

 (which is defined by switching the roles of Alice and Bob in 
\begin_inset Formula $\mathcal{P}'_{A}$
\end_inset

) to obtain 
\begin_inset Formula $\mathcal{P}''_{A}$
\end_inset

 and 
\begin_inset Formula $\mathcal{P}''_{B}$
\end_inset

, together with 
\begin_inset Formula $\alpha^{(2)}$
\end_inset

 and 
\begin_inset Formula $\beta^{(2)}$
\end_inset

.
 More explicitly, one can write, 
\begin_inset Formula 
\begin{align*}
\alpha^{(i+1)} & =(\alpha^{(i)})^{2}+(1-\alpha^{(i)})\beta^{(i)}\\
\beta^{(i+1)} & =\beta^{(i)}\alpha^{(i)}+(1-\beta^{(i)})\beta^{(i)}
\end{align*}

\end_inset

Applying this to 
\begin_inset Formula $\alpha^{(0)}=\cos^{2}(\pi/8)\approx0.852$
\end_inset

 and 
\begin_inset Formula $\beta^{(0)}\apprle0.667$
\end_inset

, we obtain 
\begin_inset Formula 
\[
\lim_{n\to\infty}\alpha^{(n)}=\lim_{n\to\infty}\beta^{(n)}\approx0.8199\dots
\]

\end_inset

which yields the biases stated in the previous subsection.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/temp_standardComp.png
	lyxscale 50
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Standard composition technique.
 (TODO: improve the caption)
\begin_inset CommandInset label
LatexCommand label
name "fig:Standard-composition-technique"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Idea
\end_layout

\begin_layout Standard
\begin_inset Branch commentary
inverted 0
status open

\begin_layout Standard
A key observation here is that here, we treated the probability of aborting
 as the honest player winning.
 We did this, for instance when Alice cheats, by assuming that the probability
 of Bob winning is 
\begin_inset Formula $1-p_{A}^{*}$
\end_inset

.
 However, this probability actually constitutes two events: first, that
 Bob deduces he wins and second, that Bob detects Alice cheating (for instance,
 when the GHZ test fails).
 In usual treatments, we simply assume that if Bob detects Alice cheating,
 he declares himself the winner.
 However, when we compose protocols, instead of allowing 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Limitation
\end_layout

\begin_layout Subsection
Protocol
\end_layout

\begin_layout Section
Beyond WCFâ€”SCF and OT
\end_layout

\begin_layout Subsection
SCF
\end_layout

\begin_layout Subsection
OT
\end_layout

\begin_layout Section
Background (self testing bounds)
\end_layout

\begin_layout Section
Security Proofs using Semidefinite Programming
\end_layout

\begin_layout Subsection
SDP when Alice self-tests
\begin_inset CommandInset label
LatexCommand label
name "subsec:SDP-when-Alice"

\end_inset


\end_layout

\begin_layout Subsection
SDP when Bob self-tests 
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintCited"
bibfiles "DI_WCF_ideas"
options "amsalpha"

\end_inset


\end_layout

\begin_layout Section
Jamie's
\end_layout

\begin_layout Standard
Section 
\end_layout

\begin_layout Standard
1) Introduction
\end_layout

\begin_layout Standard
1.1) Intro, blah blah.
 
\end_layout

\begin_layout Standard
1.2) WCF protocol with no DI security.
 Spekkens-Rudolph? 
\end_layout

\begin_layout Standard
1.3) 2011 protocol, why it is DI (idea) and its bias.
 
\end_layout

\begin_layout Standard
1.4) New idea: self-testing.
 Also, no self-testing Alice AND Bob (due to Kitaev).
 
\end_layout

\begin_layout Standard
1.5) Our NEW protocol(s).
 Self-test Alice, Self-test Bob (these are two protocols).
 Their DD security, and why DD security equals DI security (approximately,
 conceptually).
 
\end_layout

\begin_layout Standard
1.6) Suppression technique.
 Final bias.
 
\end_layout

\begin_layout Standard
1.7) Applications: WCF new bias.
 SCF new bias.
 OT new bias.
 
\end_layout

\begin_layout Standard
Section 
\end_layout

\begin_layout Standard
2) Background 
\end_layout

\begin_layout Standard
2.1) Self-testing bounds.
 
\end_layout

\begin_layout Standard
Section 3) Semidefinite programming 
\end_layout

\begin_layout Standard
3.1) SDP for self-testing Alice.
 SDP for self-testing Bob.
 (single-shot cases).
 Cheat vector graphs here as well.
 
\end_layout

\begin_layout Standard
3.2) SDP for suppression technique for WCF, SCF.
 
\end_layout

\begin_layout Standard
3.3) SDP continuity bounds (I will do this).
 
\end_layout

\begin_layout Standard
Section 4) Conclusions, and why we're awesome.
 
\end_layout

\begin_layout Standard
-- 
\end_layout

\begin_layout Standard
Here is a crappy DI-OT protocol.
 
\end_layout

\begin_layout Standard
Fix two OT protocols, one with P_A,OT* = 1, P_B,OT* = 1/2 and the other
 with P_A,OT* = 1/2, P_B,OT* = 1.
 
\end_layout

\begin_layout Standard
DI-OT protocol: 
\end_layout

\begin_layout Standard
Step 0) Do DI-WCF from our paper.
 Step 1) If no abort, and Alice wins, they use the P_A,OT* = 1 protocol.
 Step 2) If no abort, and Alice loses, they use the P_A,OT* = 1/2 protocol.
 
\end_layout

\begin_layout Standard
This yields a bias of < 1/2.
 Not pretty, but it works.
 There is likely a way to make this better, but it's a first step.
 
\end_layout

\end_body
\end_document
