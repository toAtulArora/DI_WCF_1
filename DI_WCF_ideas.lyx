#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{tikz}
\usetikzlibrary{calc}

\newcommand{\tikzmark}[1]{\tikz[overlay,remember picture] \node (#1) {};}
\newcommand{\DrawBox}[1][]{%
    \tikz[overlay,remember picture]{
    \draw[red,#1]
      ($(left)+(-0.2em,0.9em)$) rectangle
      ($(right)+(0.2em,-0.3em)$);}
}
%%%%%%%%%%%

\usepackage{enumitem}
\setlistdepth{20}
\renewlist{itemize}{itemize}{20}
% initially, use dots for all levels
\setlist[itemize]{label=$\cdot$}

% customize the first 3 levels
\setlist[itemize,1]{label=\textbullet}
\setlist[itemize,2]{label=--}
\setlist[itemize,3]{label=*}
\setlist[itemize,4]{label=$\circ$}
\setlist[itemize,5]{label=$\square$}


\usepackage{multicol}

\usepackage{qtree}

\usepackage{hyperref}

\hypersetup{colorlinks=true,urlcolor=blue}

\usepackage[super]{nth}

\usepackage{braket}

\usepackage{flafter}

\usepackage{psvectorian}

\newcommand{\ornamentleft}{%
    \psvectorian[width=2em]{2}%
}
\newcommand{\ornamentright}{%
    \psvectorian[width=2em,mirror]{2}%
}
\newcommand{\ornamentbreak}{%
    \begin{center}
    \ornamentleft\quad\ornamentright
    \end{center}%
}
\newcommand{\ornamentheader}[1]{%
    \begin{center}
    \ornamentleft
    \quad{\large\emph{#1}}\quad % style as desired
    \ornamentright
    \end{center}%
}

%\newref{thm}{name=theorem~,Name=Theorem~,names=theorems~,Names=Theorems~}
\newref{def}{name=definition~,Name=Definition~,names=definitions~,Names=Definitions~}
%\newref{cor}{name=corollary~,Name=Corollary~,names=corollaries~,Names=Corollaries~}
%\newref{lem}{name=lemma~,Name=Lemma~,names=lemmas~,Names=Lemmas~}
%\newref{claim}{name=claim~,Name=Claim~,names=claims~,Names=Claims~}
%\newref{sec}{name=section~,Name=Section~,names=sections~,Names=Sections~}
%\newref{subsec}{name=subsection~,Name=Subsection~,names=subsections~,Names=Subsections~}
%\newref{prop}{name=proposition~,Name=Proposition~,names=propositions~,Names=Propositions~}
%\newref{conj}{name=conjecture~,Name=Conjecture~,names=conjectures~,Names=Conjectures~}
%\newref{assu}{name=assumption~,Name=Assumption~,names=assumptions~,Names=Assumptions~}
\newref{rem}{name=remark~,Name=Remark~,names=remarks~,Names=Remarks~}
\newref{alg}{name=algorithm~,Name=Algorithm~,names=algorithms~,Names=Algorithms~}


%% Disable Images for now
%\usepackage{comment}
%\excludecomment{figure}
%\let\endfigure\relax

\usepackage{color}
\definecolor{purple}{RGB}{120,20,120}
\newcommand\branchcolor[2]{{\color{#1} #2}}
\newcommand\branchpurple[1]{{\color{purple} #1}}


\DeclareMathOperator*{\extr}{\text{extr}}
\end_preamble
\use_default_options true
\begin_modules
theorems-ams
theorems-ams-extended
logicalmkup
\end_modules
\maintain_unincluded_children false
\begin_local_layout
Format 60
InsetLayout Branch:commentary
  Font
    Color purple
  EndFont
  LatexName branchcolor{purple}
  LatexType command
  Requires color
End
InsetLayout Branch:proof
  Font
    Color blue
  EndFont
  LatexName branchcolor{blue}
  LatexType command
  Requires color
End
\end_local_layout
\language british
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "libertine" "default"
\font_sans "biolinum" "default"
\font_typewriter "lmtt" "default"
\font_math "libertine-ntxm" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine biblatex
\cite_engine_type authoryear
\biblio_style plain
\biblatex_bibstyle authoryear-comp
\biblatex_citestyle authoryear-comp
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\branch TDPG to Protocol
\selected 1
\filename_suffix 0
\color #faf0e6
\end_branch
\branch Results
\selected 1
\filename_suffix 0
\color #faf0e6
\end_branch
\branch proof
\selected 1
\filename_suffix 0
\color #faf0e6
\end_branch
\branch commentary
\selected 1
\filename_suffix 0
\color #faf0e6
\end_branch
\branch rough
\selected 0
\filename_suffix 0
\color #faf0e6
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1cm
\topmargin 1cm
\rightmargin 1cm
\bottommargin 1cm
\headheight 1cm
\headsep 1cm
\footskip 0.75cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Ideas | Device Independent Weak Coin Flipping
\end_layout

\begin_layout Author
Jamie Sikora, Thomas Van Himbeeck, Atul Singh Arora
\end_layout

\begin_layout Date
Marchâ€“...
 2020
\end_layout

\begin_layout Abstract
(in progress)
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\diag}{\text{diag}}
{\text{diag}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\tr}{\text{tr}}
{\text{tr}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\hc}{\text{h.c.}}
{\text{h.c.}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\prob}{\text{Prob}}
{\text{Prob}}
\end_inset


\end_layout

\begin_layout Section
Notes from the meetings
\end_layout

\begin_layout Standard
We follow two approaches with the common goal of constructing better protocols
 than the ones currently known.
 
\end_layout

\begin_layout Subsection
Meeting/afterthoughts 1 | Monday
\end_layout

\begin_layout Standard
Jamie cooked up a bunch of protocols.
 Here's the rough list of things to pursue.
\end_layout

\begin_layout Itemize
Explore the viability of the J0 protocol, proposed by Jamie.
 
\end_layout

\begin_layout Itemize
We also had to determine if the 
\begin_inset Quotes eld
\end_inset

fully distrustful
\begin_inset Quotes erd
\end_inset

 article had a better bias for device independent (strong) coin flipping
 (EDIT: it did) than the device independent weak coin flipping protocol,
 by essentially the same authors.
 
\end_layout

\begin_layout Itemize
My task was to try to formalise the 
\begin_inset Quotes eld
\end_inset

formalism
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Subsection
Meeting/afterthoughts 2 | Tuesday
\end_layout

\begin_layout Standard
There were a few ideas which were floated around by Jamie.
\end_layout

\begin_layout Itemize
F1 
\begin_inset Formula $\overset{?}{\iff}$
\end_inset

 F2 where F1 is the first framework and F2 is this one: since in DI protocols,
 we can start with any arbitrary state, consider these, followed by only
 classical information, then one last step where a part of the system is
 sent to the other.
\end_layout

\begin_layout Itemize
Understand the GHZ based protocols and re-express them using the F1 framework.
\end_layout

\begin_layout Subsection
Meeting/afterthoughts 3 | Thursday [with Tom]
\end_layout

\begin_layout Standard
I read and presented the PRL protocol (without the security analysis).
 Then I tried presenting the equivalence of the two frameworks, intuitively.
\end_layout

\begin_layout Itemize
It looks like we can use Jamie's idea; call it the J3 protocol.
 It basically adds an additional verification step and since it is for weak
 CF, it doesn't affect the bias for Bob.
 
\end_layout

\begin_layout Itemize
Tom said that allowing quantum communication can be used to break the security
 because the quantum device can encode and send the input it was fed and
 since we allow the adversary to control the quantum channels, this makes
 them too powerful.
 
\end_layout

\begin_deeper
\begin_layout Itemize
True but does learning the other player's input (maybe not always but sometimes)
 necessarily mean they have too much power? The only sane conclusion I can
 draw from this is that one has to necessarily allow classical information
 to be communicated but perhaps allowing quantum communication is also relevant.
 
\end_layout

\begin_layout Itemize
Why isn't teleportation enough? In the honest case it is clearly enough.
 We want to show that in the dishonest case, the two models are equivalent.
 The two models being, one with classical + quantum communication the other
 with only classical communication.
 In both, we allow an arbitrary number of devices to be shared (which may
 be shielded to enforce the required structure for non-locality).
 
\begin_inset Newline newline
\end_inset

Question: I have to show that a strategy in one can be equivalently expressed
 in the other.
\end_layout

\end_deeper
\begin_layout Subsection
Meeting/afterthoughts 4 | Monday
\end_layout

\begin_layout Itemize
I explained the framework; with things much better formalised and with higher
 clarity about how to impose the constraints for a cheating Bob.
\end_layout

\begin_deeper
\begin_layout Itemize
Jamie pointed out how some 
\begin_inset Quotes eld
\end_inset

self-testing of unitaries
\begin_inset Quotes erd
\end_inset

 like scheme wouldn't quite work.
\end_layout

\begin_layout Itemize
I forgot to ask him, thereafter, how to treat post measurement states of
 boxes (if at all this makes sense).
\end_layout

\end_deeper
\begin_layout Itemize
Jamie then explained his abort based protocol which seemingly improves the
 bias; intuitively, this helps when you compose protocols: if you catch
 a player cheating, you just abort, instead of playing further and getting
 cheated further.
\end_layout

\begin_layout Subsection
Meeting/afterthoughts 5 | Tuesday [with Tom]
\end_layout

\begin_layout Itemize
Jamie presented his new abort based protocols.
 Tom seemed to be ok with the ideas.
\end_layout

\begin_layout Itemize
I presented the proofs of Alice's and Bob's security.
 We compared it with Jamie's direct analysis and saw where they differed.
 We worked towards characterising the set 
\begin_inset Formula $\mathcal{A}_{c}$
\end_inset

, where in addition to the probability that Alice succeeds in convincing
 Bob, we keep track of the probability of her getting caught cheating.
 
\end_layout

\begin_layout Itemize
Tom also pointed out an oversight about testing Bob; we were sending both
 
\begin_inset Formula $s_{A}$
\end_inset

 and 
\begin_inset Formula $r_{A}$
\end_inset

 to Bob, before testing him.
 We must delay the sending of 
\begin_inset Formula $r_{A}$
\end_inset

 else he can pass the test with certainty.
\end_layout

\begin_layout Subsection
aoeu
\end_layout

\begin_layout Itemize
Current Approach (improve bias):
\end_layout

\begin_deeper
\begin_layout Itemize
Continuity; Self-testing (rigorous proof of security)
\end_layout

\end_deeper
\begin_layout Itemize
NPA based; if
\end_layout

\begin_layout Itemize
Quantum Messages exchange; see if this is sorted
\end_layout

\begin_layout Itemize
Dip Dip Boom | edge of point games; Certify Unitaries
\end_layout

\begin_deeper
\begin_layout Itemize
Dip Dip Boom with entanglement + classical communication.
\end_layout

\end_deeper
\begin_layout Itemize
Entanglement based version; MBQC; have some graph states and use some operations
\end_layout

\begin_deeper
\begin_layout Itemize
Interactive protocol; like a measurement based approach; could be equivalent
\end_layout

\begin_layout Itemize
may be more natural to translate into device independent approach
\end_layout

\begin_deeper
\begin_layout Itemize
Issue; can you share it between Alice and Bob
\end_layout

\end_deeper
\end_deeper
\begin_layout Subsection
July 23â€“25, 2020
\end_layout

\begin_layout Itemize
[numerics] 
\end_layout

\begin_deeper
\begin_layout Itemize
Results: 
\end_layout

\begin_deeper
\begin_layout Itemize
Post Jamie Magic: 0.42 (or some such); 
\end_layout

\begin_deeper
\begin_layout Itemize
The issue was that I had not implemented the measurement of 
\begin_inset Formula $A$
\end_inset

 (I was just measuring in the standard Z basis always);
\end_layout

\end_deeper
\begin_layout Itemize
Post Jamie Magic, Debug 1: 0.499 (or similar): 
\end_layout

\begin_deeper
\begin_layout Itemize
I realised that after the measurement and computation of S, I wasn't actually
 simulating the sending of S.
 Did this by entangling it with S' and tracing it out (so the result is
 a mixed state and Bob can hold it).
\end_layout

\end_deeper
\begin_layout Itemize
Post Jamie Magic, Debug 2; 0.625 (or similar):
\end_layout

\begin_deeper
\begin_layout Itemize
This seemed to make a lot more sense; decided to do a sanity check to recover
 0.75 when we don't do a GHZ test (i.e.
 the extra test for Bob).
\end_layout

\end_deeper
\begin_layout Itemize
Post Jamie Magic, Debug 3; 0.999 (or similar):
\end_layout

\begin_deeper
\begin_layout Itemize
[*] don't know what is happening;
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Two issues
\end_layout

\begin_deeper
\begin_layout Itemize
When I remove the GHZ test, I expect the result to be 0.75 (the older value);
 instead I get 0.999.
 
\end_layout

\begin_layout Itemize
Isn't it crucial to send Z? Because how else will Bob know which basis to
 measure in (e.g.
 when he's honest).
 Sure, Alice has both X and Y so for her finding Z is not an issue but Bob
 has only Y.
 [this still doesn't explain why the previous step is failing; this should
 give more power to Bob but he is already able to maximally cheat (without
 the GHZ test)].
\end_layout

\end_deeper
\end_deeper
\begin_layout Section
F1 | A framework for Distrustful DI protocols
\end_layout

\begin_layout Standard
For the moment, consider referring to Collaborations->DI_WCF->F1 (and its
 subsections).
 TODO: Add the description here.
\end_layout

\begin_layout Section
Sikora's Suppression Technique
\end_layout

\begin_layout Standard
\begin_inset Branch commentary
inverted 0
status open

\begin_layout Standard
We consider a somewhat restricted and simultaneous slightly more general
 class of weak coin flipping protocols.
\end_layout

\begin_layout Standard
EDIT: I got myself thoroughly confused with the whole discussion.
 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
WCF
\begin_inset Formula $^{\perp}$
\end_inset

: Abort-phobic Weak Coin Flipping
\end_layout

\begin_layout Assumption
\begin_inset CommandInset label
LatexCommand label
name "assu:standardWCF"

\end_inset

In the usual definition of WCF, we assume that the players can output 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

.
 The sole preference of Alice is to convince Bob that the outcome was 
\begin_inset Formula $A$
\end_inset

 and, analogously, the sole preference of Bob is to convince Alice that
 the outcome was 
\begin_inset Formula $B$
\end_inset

.
 
\end_layout

\begin_layout Standard
This is why we never care about what happens when the players disagree.
 This is because an optimal cheating player, say Alice, will always output
 
\begin_inset Formula $A$
\end_inset

 and so if there is a disagreement, it means that Alice failed to convince
 Bob that the outcome was 
\begin_inset Formula $A$
\end_inset

.
 This case is not penalised in the standard construction; this follows directly
 from the assumption, e.g.
 Alice doesn't distinguish between the remaining outcomes.
\end_layout

\begin_layout Subsubsection
Preference formalised using cones
\end_layout

\begin_layout Standard
Distinguishing between the remaining outcomes, i.e.
 disagreement and abort, can become important (as we shall see).
 This in turn must be formalised by defining what the players prefer.
 Taking the most operational perspective, any form of weak coin flipping
 protocol must end with three possible outcomesâ€”both players agree that
 the output is either 
\begin_inset Formula $A$
\end_inset

, 
\begin_inset Formula $B$
\end_inset

 or 
\begin_inset Formula $\perp$
\end_inset

 (abort).
 For concreteness, suppose Alice is cheating and Bob is honest.
 Let the elements of, what we call a cheat vector, 
\begin_inset Formula $(\alpha_{A},\alpha_{B},\alpha_{\perp}=1-\alpha_{A}-\alpha_{B})$
\end_inset

, define the probabilities of the protocol resulting in the outputs 
\begin_inset Formula $A,B,\perp$
\end_inset

 respectively.
 Often, we drop the last component of the cheat vector for clarity.
 We formalise Alice's preferences by defining an order among the vectors
 (with respect to a cone 
\begin_inset Formula $K$
\end_inset

) as follows: 
\begin_inset Formula 
\begin{align*}
(\alpha_{A},\alpha_{B}) & \succ_{K}(\alpha_{A}',\alpha_{B}) & \iff\alpha_{A}>\alpha_{A}',\\
(\alpha_{A},\alpha_{B}) & \succ_{K}(\alpha_{A},\alpha_{B}') & \iff\alpha_{B}>\alpha_{B}'.
\end{align*}

\end_inset

The first relation captures the assumption that Alice wishes to increase
 the probability of obtaining the outcome 
\begin_inset Formula $A$
\end_inset

, which is the same as that of standard weak coin flipping.
 The second captures the assumption that Alice prefers to increase the probabili
ty of Bob winning compared to that of aborting.
 This ordering is equivalent to defining the generalised inequality with
 respect to the cone 
\begin_inset Formula $K$
\end_inset

 where 
\begin_inset Formula $K:=\{(a,b):a,b\in\mathbb{R}_{\ge0}\}$
\end_inset

.
 We thus have the following.
\end_layout

\begin_layout Assumption
\begin_inset CommandInset label
LatexCommand label
name "assu:WCFperp"

\end_inset

In Abort-phobic Weak Coin Flipping (written as WCF
\begin_inset Formula $^{\perp}$
\end_inset

), the preferences of Alice are given by 
\begin_inset Formula $(\alpha_{A},\alpha_{B})\succ_{K}(\alpha_{A}',\alpha_{B}')$
\end_inset

 while those of Bob are given by 
\begin_inset Formula $(\beta_{A},\beta_{B})\succ_{K}(\beta_{A}',\beta_{B}')$
\end_inset

 where we used the notation of cheat vectors and the definition of 
\begin_inset Formula $K$
\end_inset

 as described above.
\end_layout

\begin_layout Remark
WCF
\begin_inset Formula $^{\perp}$
\end_inset

 is relevant in situations exemplified by 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:AbortCheat-composition"
plural "false"
caps "true"
noprefix "false"

\end_inset

.
 Situations may arise where a cheating Alice may prefer to abort than have
 Bob win with a higher probability.
 This would mean that for Alice, 
\begin_inset Formula $K=\{(a,-b):a,b\in\mathbb{R}_{\ge0}\}$
\end_inset

 while for Bob, we must use 
\begin_inset Formula $-K$
\end_inset

.
 We do not discuss these further in this work.
\end_layout

\begin_layout Subsubsection
Disagreement vs Abort
\end_layout

\begin_layout Standard
In the preceding discussion, we took the most operational perspective, i.e.
 any weak coin flipping must end with both players agreeing to either the
 outcome 
\begin_inset Formula $A$
\end_inset

, 
\begin_inset Formula $B$
\end_inset

 or 
\begin_inset Formula $\perp$
\end_inset

.
 We now consider two classes of protocols.
\end_layout

\begin_layout Enumerate
Each player outputs
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
In the analysis, we assume the cheating player learns the output of the
 honest player, before broadcasting his outcome.
 This is analogous to allowing the cheating player to create and distribute
 the boxes.
\end_layout

\end_inset

 either 
\begin_inset Formula $A$
\end_inset

, 
\begin_inset Formula $B$
\end_inset

 or 
\begin_inset Formula $\perp$
\end_inset

.
 If they disagree, the protocol is aborted
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
(if they agree, then the outcome is the agreed outcome)
\end_layout

\end_inset

.
\end_layout

\begin_layout Enumerate
Each player outputs either 
\begin_inset Formula $A$
\end_inset

 or 
\begin_inset Formula $B$
\end_inset

.
 If they disagree, the protocol is aborted.
\end_layout

\begin_layout Standard
A priori, we note that the first class is more general because a player
 can abort the protocol with certainty by outputting 
\begin_inset Formula $\perp$
\end_inset

 while in the second class no such mechanism exists, i.e., abort is always
 subject to the other (read cheating) player's (a priori unknown) choice.
 The distinction matters if 
\begin_inset CommandInset ref
LatexCommand formatted
reference "assu:WCFperp"
plural "false"
caps "true"
noprefix "false"

\end_inset

 holds.
 If 
\begin_inset CommandInset ref
LatexCommand formatted
reference "assu:standardWCF"
plural "false"
caps "true"
noprefix "false"

\end_inset

 holds, then the distinction disappears because the outcome of a cheating
 player is known and therefore the honest player can abort with certainty
 by declaring themselves the winner.
\end_layout

\begin_layout Standard
One drawback of this approach is that noise will break the relation between
 abort and agreement; we defer these issues to a later stage of investigation.
\end_layout

\begin_layout Subsection
Formal Definitions of WCF and WCF
\begin_inset Formula $^{\perp}$
\end_inset


\end_layout

\begin_layout Standard
NB.
 I am using two names for the same concept.
 WCF
\begin_inset Formula $^{\perp}$
\end_inset

=Abort-phobic WCF=WCF with cheating abort.
\end_layout

\begin_layout Definition
\begin_inset Argument 1
status open

\begin_layout Plain Layout
WCF with cheating abort
\end_layout

\end_inset

 Weak Coin Flipping is a two player (Alice and Bob) interactive protocol
 wherein they wish to generate a random bit.
 
\begin_inset CommandInset label
LatexCommand label
name "def:WCF"

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
After the interactions, each player outputs either 
\begin_inset Formula $A$
\end_inset

, 
\begin_inset Formula $B$
\end_inset

 or 
\begin_inset Formula $\perp$
\end_inset

 (for abort).
 The two players, together, can output 
\begin_inset Formula $\{AA,BB,AB,BA,*\perp,\perp*\}$
\end_inset

 where 
\begin_inset Formula $*$
\end_inset

 is either 
\begin_inset Formula $A$
\end_inset

 or 
\begin_inset Formula $B$
\end_inset

.
 Whenever the outcomes differ, the players agree to abort the protocol.
\begin_inset Newline newline
\end_inset

(This is needed because to proceed, they must agree on what to do next;
 thus even though after the interaction their outputs may vary but they
 must, still, agree on how to proceed).
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
Both Honest.

\emph default
 If the outputs are 
\begin_inset Formula $AA$
\end_inset

 (or 
\begin_inset Formula $BB$
\end_inset

), Alice and Bob both conclude that Alice (or Bob) won.
 These two outputs, 
\begin_inset Formula $AA$
\end_inset

 and 
\begin_inset Formula $BB$
\end_inset

, appear with probability 
\begin_inset Formula $\frac{1}{2}$
\end_inset

.
 
\end_layout

\begin_layout Itemize

\emph on
Nomenclature for Security.

\emph default
 Suppose Alice is cheating (i.e.
 deviating from the protocol in some way).
 Let 
\begin_inset Formula $\vec{q}_{A}=(\alpha_{A},\alpha_{B},\alpha_{\perp}=1-\alpha_{A}-\alpha_{B})$
\end_inset

, what we call a 
\emph on
cheat vector,
\emph default
 where 
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $\alpha_{A}$
\end_inset

 denotes the probability of the outcome 
\begin_inset Formula $AA$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\alpha_{B}$
\end_inset

 denotes the probability of the outcome 
\begin_inset Formula $BB$
\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\alpha_{\perp}$
\end_inset

 denotes the probability of any other outcome, i.e.
 
\begin_inset Formula $\alpha_{\perp}=1-\alpha_{A}-\alpha_{B}$
\end_inset

.
 
\end_layout

\begin_layout Standard
Let 
\emph on
cheat vector set
\emph default
 for Alice be 
\begin_inset Formula $\mathcal{A}_{c}:=\{\vec{q}_{A}:\text{The probabilities correspond to some cheating strategy of Alice}\}$
\end_inset

.
 Analogously, define 
\begin_inset Formula $\vec{q}_{B}=(\beta_{A},\beta_{B},\beta_{\perp}=1-\beta_{A}-\beta_{B})$
\end_inset

 and the 
\emph on
cheat vector set
\emph default
 for Bob be 
\begin_inset Formula $\mathcal{B}_{c}$
\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Itemize

\emph on
Standard WCF Security.

\emph default
 A WCF protocol has bias 
\begin_inset Formula $\max\{\epsilon_{A},\epsilon_{B}\}$
\end_inset

 if 
\begin_inset Formula $P_{A}^{*}=\frac{1}{2}+\epsilon_{A}$
\end_inset

 where 
\begin_inset Formula $P_{A}^{*}=\max_{(\alpha_{A},\alpha_{B},\alpha_{\perp})\in\mathcal{A}_{c}}\alpha_{A}$
\end_inset

 and 
\begin_inset Formula $P_{B}^{*}=\frac{1}{2}+\epsilon_{B}$
\end_inset

 where 
\begin_inset Formula $P_{B}^{*}=\max_{(\beta_{A},\beta_{B},\beta_{\perp})\in\mathcal{B}_{c}}\beta_{B}$
\end_inset

.
 
\begin_inset Newline newline
\end_inset

(This formalises the fact that the players have preferences; i.e.
 we only care about protecting Bob from Alice trying to bias towards outcome
 
\begin_inset Formula $A$
\end_inset

 and analogously, about protecting Alice from Bob trying to bias towards
 outcome 
\begin_inset Formula $B$
\end_inset

).
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Branch rough
inverted 0
status collapsed

\begin_layout Standard
[IGNORE THIS] The idea in this section is two-fold: the first is that a
 given coin flipping protocol may be re-analysed for its abort behaviour
 and the second is that coin flipping protocols with the possibility of
 aborting may be composed to obtain overall better protocols.
\end_layout

\begin_layout Standard
Let us start with an intuitive discussion.
 Suppose we are given a WCF protocol, 
\begin_inset Formula $\mathcal{P}$
\end_inset

 which in the honest case case has 
\begin_inset Formula $\vec{q}=\left(p_{A},p_{B},p_{A\perp},P_{B\perp}\right)$
\end_inset

 and it encodes the probabilities of Alice winning, Bob winning, Alice aborting
 and Bob aborting respectively.
 For simplicity, we assume that in the honest case, 
\begin_inset Formula $p_{A}=p_{B}=\frac{1}{2}$
\end_inset

 and 
\begin_inset Formula $p_{A\perp}=p_{B\perp}=0$
\end_inset

.
 We thus have, for the honest case, 
\begin_inset Formula $\vec{q}=\left(\frac{1}{2},\frac{1}{2},0,0\right)$
\end_inset

.
 Consider the case where Alice cheats and Bob is honest.
 Suppose there exists a strategy for Alice such that 
\begin_inset Formula $\vec{q}_{A}=\left(p_{\alpha},p_{\beta},p_{\alpha\perp},p_{\beta\perp}\right)$
\end_inset

 encodes the probabilities of Bob accepting Alice won (which alone is of
 relevance in the single-shot analysis), Bob deducing he has won (TODO:
 what does Alice do in this case? does this outcome require Alice to know
 that Bob deduced he won and so she also outputs the same thing? How do
 we handle disagreement?), Alice aborting and finally that of Bob catching
 Alice cheating and thus aborting (since Bob is honest).
 We assume that a cheating Alice never aborts (because we assume she would
 rather have a result for the coin flip than aborting).
 Thus, we restrict to 
\begin_inset Formula $\vec{q}_{A}=(p_{\alpha},p_{\beta},0,p_{\beta\perp})$
\end_inset

.
 The set of 
\begin_inset Formula $\vec{q}_{A}$
\end_inset

 (which encodes the possible probabilities of the various outcomes when
 Alice cheats) is denoted by 
\begin_inset Formula $\mathcal{A}_{c}$
\end_inset

.
 One can analogously define 
\begin_inset Formula $\vec{q}_{B}=(p_{\alpha},p_{\beta},p_{\alpha\perp},0)$
\end_inset

.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
For clarity, we will be slightly redundant.
\end_layout

\begin_layout Definition
\begin_inset Argument 1
status open

\begin_layout Plain Layout
(Standard) WCF
\end_layout

\end_inset

 (Standard) Weak Coin Flipping is a two player (Alice and Bob) interactive
 protocol wherein they wish to generate a random bit.
 
\end_layout

\begin_deeper
\begin_layout Itemize
After the interactions, each player outputs either 
\begin_inset Formula $A$
\end_inset

 or 
\begin_inset Formula $B$
\end_inset

.
 (If they catch the other player cheating, they declare themselves the winner).
 The two players, together, can output 
\begin_inset Formula $\{AA,BB,AB,BA\}$
\end_inset

.
 Whenever the outcomes differ, the honest player is declared the winner
 (assuming at least one is honest; when both are cheating, we can't say
 anything).
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
Both Honest.

\emph default
 If the outputs are 
\begin_inset Formula $AA$
\end_inset

 then Alice wins and if they are 
\begin_inset Formula $BB$
\end_inset

 then Bob wins.
 These outputs, 
\begin_inset Formula $AA$
\end_inset

 and 
\begin_inset Formula $BB$
\end_inset

, appear with probability 
\begin_inset Formula $\frac{1}{2}$
\end_inset

.
\end_layout

\begin_layout Itemize

\emph on
Security.

\emph default
 Suppose Alice is cheating and Bob is honest.
 Then the highest probability (over all of Alice's cheating strategies)
 of Bob outputting 
\begin_inset Formula $A$
\end_inset

 is given by 
\begin_inset Formula $P_{A}^{*}$
\end_inset

; Alice is assumed to output 
\begin_inset Formula $A$
\end_inset

.
 Analogously, the highest probability (over all of Bob's cheating strategies)
 of Alice outputting 
\begin_inset Formula $B$
\end_inset

 (and thus winning) is given by 
\begin_inset Formula $P_{B}^{*}$
\end_inset

; Bob is assumed to output 
\begin_inset Formula $B$
\end_inset

.
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
TODO: I should be able to handle abort in standard WCF as well, just like
 we do in standard SCF; because if not, any non-trivial noise will break
 the protocol.
\end_layout

\begin_layout Remark
A WCF protocol with cheating abort can be converted into a (standard) WCF
 protocol by mapping the outputs (of the protocol) 
\begin_inset Formula $A$
\end_inset

 to 
\begin_inset Formula $A$
\end_inset

, 
\begin_inset Formula $B$
\end_inset

 to 
\begin_inset Formula $B$
\end_inset

 and 
\begin_inset Formula $\perp$
\end_inset

 to the honest player winning.
 
\begin_inset CommandInset label
LatexCommand label
name "rem:standardWCFfromWCFwithAbort"

\end_inset


\end_layout

\begin_layout Definition
\begin_inset Argument 1
status open

\begin_layout Plain Layout
(Standard) SCF
\end_layout

\end_inset

 Strong Coin Flipping is a two player (Alice and Bob) interactive protocol
 wherein they wish to generate a random bit.
 
\begin_inset CommandInset label
LatexCommand label
name "def:SCF"

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
After the interactions, each player outputs either 
\begin_inset Formula $0$
\end_inset

, 
\begin_inset Formula $1$
\end_inset

 or 
\begin_inset Formula $\perp$
\end_inset

 (for abort).
 The two players, together, can output 
\begin_inset Formula $\{00,11,01,10,*\perp,\perp*\}$
\end_inset

 where 
\begin_inset Formula $*$
\end_inset

 is either 
\begin_inset Formula $0$
\end_inset

 or 
\begin_inset Formula $1$
\end_inset

.
 Whenever the outcomes differ, the players agree to abort the protocol.
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
Both Honest.

\emph default
 If the outputs are 
\begin_inset Formula $00$
\end_inset

 (or 
\begin_inset Formula $11$
\end_inset

), Alice and Bob both conclude that Alice (or Bob) won.
 These two outputs, 
\begin_inset Formula $00$
\end_inset

 and 
\begin_inset Formula $11$
\end_inset

, appear with probability 
\begin_inset Formula $\frac{1}{2}$
\end_inset

.
 
\end_layout

\begin_layout Itemize

\emph on
(Standard SCF) Security.

\emph default
 Suppose Alice is cheating and Bob is honest.
 Then the maximum (over all possible cheating strategies of Alice) probability
 that Bob outputs 
\begin_inset Formula $x$
\end_inset

 is given by 
\begin_inset Formula $p_{*x}$
\end_inset

.
 Analogously, when Bob is cheating and Alice is honest, then the maximum
 (over all possible cheating strategies of Bob) probability that Alice outputs
 
\begin_inset Formula $y$
\end_inset

 is given by 
\begin_inset Formula $p_{y*}$
\end_inset

.
 
\begin_inset Newline newline
\end_inset

(E.g.
 
\begin_inset Formula $p_{*x}$
\end_inset

 indicates the probability that the protocol ends with both players agreeing
 to the outcome 
\begin_inset Formula $x$
\end_inset

 because Alice can convince Bob of the outcome 
\begin_inset Formula $x$
\end_inset

 and she, being the cheating player, can simply lie about her outcome being
 
\begin_inset Formula $x$
\end_inset

).
 
\end_layout

\end_deeper
\end_deeper
\begin_layout Remark
A (standard) SCF protocol with security 
\begin_inset Formula $p_{*x},p_{y*}$
\end_inset

 can be converted into a (standard) WCF protocol with 
\begin_inset Formula $P_{A}^{*}=p_{*0}$
\end_inset

 and 
\begin_inset Formula $P_{B}^{*}=p_{1*}$
\end_inset

, by mapping 
\begin_inset Formula $0$
\end_inset

 to Alice winning, 
\begin_inset Formula $1$
\end_inset

 to Bob winning and 
\begin_inset Formula $\perp$
\end_inset

 to the honest player winning.
\end_layout

\begin_layout Lemma
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Single Suppression
\end_layout

\end_inset

 Consider a SCF protocol (see 
\begin_inset CommandInset ref
LatexCommand formatted
reference "def:SCF"
plural "false"
caps "true"
noprefix "false"

\end_inset

) with cheating probabilities 
\begin_inset Formula $(p_{*x},p_{y*})$
\end_inset

 for both 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $y$
\end_inset

 in 
\begin_inset Formula $\{0,1\}$
\end_inset

 (assume the honest probabilities are 
\begin_inset Formula $\frac{1}{2}$
\end_inset

 and 
\begin_inset Formula $\frac{1}{2}$
\end_inset

).
 Suppose that 
\begin_inset Formula $p_{*0}=p_{*1}>p_{0*}=p_{1*}$
\end_inset

, i.e.
 the SCF protocol is unbalanced.
 Consider a 
\emph on
WCF with cheating abort 
\emph default
(see 
\begin_inset CommandInset ref
LatexCommand formatted
reference "def:WCF"
plural "false"
caps "true"
noprefix "false"

\end_inset

) and the 
\emph on
cheat vector sets
\emph default
 
\begin_inset Formula $\mathcal{A}_{c}$
\end_inset

 and 
\begin_inset Formula $\mathcal{B}_{c}$
\end_inset

.
 Using these, one can compose them to construct a SCF protocol with 
\begin_inset Formula 
\[
p_{*x}'=\max_{(\alpha_{A},\alpha_{B},\alpha_{\perp})\in\mathcal{A}_{c}}\alpha_{A}p_{*x}+\alpha_{B}p_{x*}
\]

\end_inset

 and 
\begin_inset Formula 
\[
p_{y*}'=\max_{(\beta_{A},\beta_{B},\beta_{\perp})\in\mathcal{B}_{c}}\beta_{A}p_{y*}+\beta_{B}p_{*y}.
\]

\end_inset

Further, 
\begin_inset Formula $p'_{*x}\le P_{A}^{*}p_{*x}+(1-P_{A}^{*})p_{x*}$
\end_inset

 and 
\begin_inset Formula $p'_{y*}\le P_{B}^{*}p_{*y}+(1-P_{B}^{*})p_{y*}$
\end_inset

, i.e.
 the new SCF protocol necessarily performs at least as good as the one obtained
 using a standard composition technique (which neglects aborts in WCF).
\end_layout

\begin_layout Standard
\begin_inset Branch proof
inverted 0
status collapsed

\begin_layout Proof
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/temp_standardComposition.png
	lyxscale 40
	width 6cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Standard composition of a WCF protocol and unbalanced SCF protocol produces
 a more balanced SCF protocol.
\begin_inset CommandInset label
LatexCommand label
name "fig:Standard-composition"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Proof
First, we construct a SCF protocol using the standard composition technique
 of a (standard) WCF protocol and a (standard) SCF protocol as in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:Standard-composition"
plural "false"
caps "true"
noprefix "false"

\end_inset

.
 Suppose Alice cheats (Bob is honest).
 For the WCF protocol, she will try to bias towards 
\begin_inset Formula $A$
\end_inset

 because this increases her chance of running the SCF protocol where she
 has the advantage (we assume 
\begin_inset Formula $p_{*x}>p_{y*}$
\end_inset

).
 Her success probability (i.e.
 of convincing Bob that the output is 
\begin_inset Formula $x$
\end_inset

), is thus, 
\begin_inset Formula $p''_{*x}:=P_{A}^{*}p_{*x}+(1-P_{A}^{*})p_{x*}$
\end_inset

 where we used 
\begin_inset Formula $\bar{p}_{*x}=p_{x*}$
\end_inset

.
 Suppose Bob cheats (Alice is honest).
 Bob, similarly, would bias towards 
\begin_inset Formula $B$
\end_inset

 to gain an advantage.
 His success probability (i.e.
 of convincing Alice that the output is 
\begin_inset Formula $y$
\end_inset

), is thus, 
\begin_inset Formula $p''_{y*}:=P_{B}^{*}p_{*y}+(1-P_{B}^{*})p_{y*}$
\end_inset

 where we used 
\begin_inset Formula $\bar{p}_{y*}=p_{*y}$
\end_inset

.
 
\end_layout

\begin_layout Proof
We now compose a WCF protocol (with cheat abort) with a (standard) SCF protocol
 as in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:AbortCheat-composition"
plural "false"
caps "true"
noprefix "false"

\end_inset

.
 Suppose Alice cheats (Bob is honest).
 Further, suppose she uses some strategy corresponding to the cheat vector
 
\begin_inset Formula $(\alpha_{A},\alpha_{B},\alpha_{\perp})\in\mathcal{A}_{c}$
\end_inset

.
 Then, her success probability (i.e.
 of convincing Bob that the output is 
\begin_inset Formula $x$
\end_inset

) is 
\begin_inset Formula $p'_{*x}=\alpha_{A}p_{*x}+\alpha_{B}p_{x*}$
\end_inset

.
 The corresponding expression of success probability for a cheating Bob
 is 
\begin_inset Formula $p'_{y*}=\beta_{B}p_{*y}+\beta_{A}p_{y*}$
\end_inset

.
 
\end_layout

\begin_layout Proof
It remains to establish that 
\begin_inset Formula $p'_{*x}\le p''_{*x}$
\end_inset

 and that 
\begin_inset Formula $p'_{y*}\le p''_{*y}$
\end_inset

.
 To this end, from 
\begin_inset CommandInset ref
LatexCommand formatted
reference "rem:standardWCFfromWCFwithAbort"
plural "false"
caps "true"
noprefix "false"

\end_inset

 we know that 
\begin_inset Formula $P_{A}^{*}=\max_{(\alpha_{A},\alpha_{B},\alpha_{\perp})\in\mathcal{A}_{c}}\alpha_{A}$
\end_inset

 and similarly 
\begin_inset Formula $P_{B}^{*}=\max_{(\beta_{A},\beta_{B},\beta_{\perp})\in\mathcal{B}_{c}}\beta_{B}$
\end_inset

.
 We therefore have 
\begin_inset Formula 
\begin{align*}
p''_{*x}=P_{A}^{*}p_{*x}+(1-P_{A}^{*})p_{x*} & =\left(P_{A}^{*}-(P_{A}^{*}-\alpha_{A})+(P_{A}^{*}-\alpha_{A})\right)p_{*x}+(1-P_{A}^{*})p_{x*}\\
 & \ge\alpha_{A}p_{*x}+\left((P_{A}^{*}-\alpha_{A})+(1-P_{A}^{*})\right)p_{x*} & \because p_{*x}\ge p_{x*}\\
 & =\alpha_{A}p_{*x}+(1-\alpha_{A})p_{*x}\\
 & \ge\alpha_{A}p_{*x}+\alpha_{B}p_{*x}=p'_{*x}.
\end{align*}

\end_inset


\end_layout

\begin_layout Proof
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/temp_cheatAbortComposition.png
	lyxscale 40
	width 6cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Composition of a WCF protocol with abort and an unbalanced SCF protocol
 produces a (possibly better and) more balanced SCF protocol.
\begin_inset CommandInset label
LatexCommand label
name "fig:AbortCheat-composition"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Sikora's DI coin flipping protocols
\end_layout

\begin_layout Remark
TODO: Explain the standard box exchange description.
 | something like this: Alice and Bob shield each box so that it can't communica
te with any other box.
 
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Algorithm
\begin_inset Argument 1
status open

\begin_layout Plain Layout
SCF, original
\end_layout

\end_inset

 Alice has one box and Bob has two boxes (in the security analysis, we let
 the cheating player distribute the boxes).
 Each box takes one binary input and gives one binary output.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Alice chooses 
\begin_inset Formula $s_{A}\in_{R}\{0,1\}$
\end_inset

 and inputs it into her box to obtain 
\begin_inset Formula $r_{A}$
\end_inset

.
 She chooses 
\begin_inset Formula $a\in_{R}\{0,1\}$
\end_inset

 to compute 
\begin_inset Formula $c=r_{A}\oplus s_{A}.a$
\end_inset

 and sends 
\begin_inset Formula $c$
\end_inset

 to Bob.
\end_layout

\begin_layout Enumerate
Bob chooses 
\begin_inset Formula $b\in_{R}\{0,1\}$
\end_inset

 and sends it to Alice.
\end_layout

\begin_layout Enumerate
Alice sends 
\begin_inset Formula $s_{A}$
\end_inset

 and 
\begin_inset Formula $r_{A}$
\end_inset

 to Bob.
 They both compute the output 
\begin_inset Formula $s_{A}\oplus b$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
Test round
\end_layout

\begin_deeper
\begin_layout Enumerate
Bob tests if 
\begin_inset Formula $c=r_{A}$
\end_inset

 or 
\begin_inset Formula $c=r_{A}\oplus s_{A}$
\end_inset

.
 If the test fails, he aborts.
 Bob chooses 
\begin_inset Formula $s_{B},s_{C}\in_{R}\{0,1\}$
\end_inset

 such that 
\begin_inset Formula $s_{A}\oplus s_{B}\oplus s_{C}=1$
\end_inset

 and then performs a GHZ using 
\begin_inset Formula $s_{A},s_{B},s_{C}$
\end_inset

 as the inputs and 
\begin_inset Formula $r_{A},r_{B},r_{C}$
\end_inset

 as the output from the three boxes.
 He aborts if this test fails.
\end_layout

\end_deeper
\end_deeper
\end_inset


\end_layout

\begin_layout Algorithm
\begin_inset Argument 1
status open

\begin_layout Plain Layout
SCF, original
\end_layout

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "alg:SCForiginal"

\end_inset

Alice has one box and Bob has two boxes (in the security analysis, we let
 the cheating player distribute the boxes).
 Each box takes one binary input and gives one binary output.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Alice chooses 
\begin_inset Formula $x\in_{R}\{0,1\}$
\end_inset

 and inputs it into her box to obtain 
\begin_inset Formula $a$
\end_inset

.
 She chooses 
\begin_inset Formula $r\in_{R}\{0,1\}$
\end_inset

 to compute 
\begin_inset Formula $s=a\oplus x.r$
\end_inset

 and sends 
\begin_inset Formula $s$
\end_inset

 to Bob.
\end_layout

\begin_layout Enumerate
Bob chooses 
\begin_inset Formula $g\in_{R}\{0,1\}$
\end_inset

 (for 
\begin_inset Quotes eld
\end_inset

guess
\begin_inset Quotes erd
\end_inset

) and sends it to Alice.
\end_layout

\begin_layout Enumerate
Alice sends 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $a$
\end_inset

 to Bob.
 They both compute the output 
\begin_inset Formula $x\oplus g$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
Test round
\end_layout

\begin_deeper
\begin_layout Enumerate
Bob tests if 
\begin_inset Formula $s=a$
\end_inset

 or 
\begin_inset Formula $s=a\oplus x$
\end_inset

.
 If the test fails, he aborts.
 Bob chooses 
\begin_inset Formula $b,c\in_{R}\{0,1\}$
\end_inset

 such that 
\begin_inset Formula $a\oplus b\oplus c=1$
\end_inset

 and then performs a GHZ using 
\begin_inset Formula $a,b,c$
\end_inset

 as the inputs and 
\begin_inset Formula $x,y,z$
\end_inset

 as the output from the three boxes.
 He aborts if this test fails.
\end_layout

\end_deeper
\end_deeper
\begin_layout Lemma
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Security of SCF
\end_layout

\end_inset

 
\begin_inset CommandInset citation
LatexCommand citep
key "Silman2011"
literal "false"

\end_inset

 For 
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:SCForiginal"
plural "false"
caps "true"
noprefix "false"

\end_inset

, 
\begin_inset Formula $P_{B}^{*}\le\frac{3}{4}$
\end_inset

 and 
\begin_inset Formula $P_{A}^{*}\le\cos^{2}(\pi/8)$
\end_inset

.
 Further, both bounds are saturated by a quantum strategy which uses a GHZ
 state and the honest player measures along the 
\begin_inset Formula $\sigma_{x}/\sigma_{y}$
\end_inset

 basis corresponding to input 
\begin_inset Formula $0/1$
\end_inset

 into the box.
 Cheating Alice measures along 
\begin_inset Formula $\sigma_{\hat{n}}$
\end_inset

 for 
\begin_inset Formula $\hat{n}=\frac{1}{\sqrt{2}}(\hat{x}+\hat{y})$
\end_inset

 while cheating Bob measures his first box along 
\begin_inset Formula $\sigma_{x}$
\end_inset

 and second along 
\begin_inset Formula $\sigma_{y}$
\end_inset

.
 
\begin_inset CommandInset label
LatexCommand label
name "lem:SCFstandard"

\end_inset


\end_layout

\begin_layout Standard
We now consider three different WCF protocols derived from this SCF protocol
 which should be at least as secure as simply using the SCF protocol as
 a WCF protocol.
 We use a combination of two ideas and systematically try to see which works.
 The first idea, 
\emph on
Extra Test
\emph default
: test Bob as well.
 The second idea: use the 
\emph on
rigidity
\emph default
 of GHZ; enforce, for instance, that when Alice is honest, the state in
 the boxes is GHZ and that Alice's box will measure along 
\begin_inset Formula $\sigma_{x}/\sigma_{y}$
\end_inset

.
 Our first objective is to see if the bias is decreased by any combination
 of these and the second is to find the (minimal elements of the) set of
 cheat vectors (see 
\begin_inset CommandInset ref
LatexCommand formatted
reference "tab:Variants-of-the-WCF-protocols"
plural "false"
caps "true"
noprefix "false"

\end_inset

).
 
\end_layout

\begin_layout Standard
If the bias does indeed reduce, then using the standard composition technique,
 we should also obtain a better SCF protocol.
 With some more work, if the cheating vectors can be characterised, then
 one should be able to use Sikora's composition technique to suppress the
 bias further.
 If the bias is not reduced, then the latter might still yield improvements.
\end_layout

\begin_layout Subsection
Bidirectional rigidity
\end_layout

\begin_layout Standard
The following may seem reasonable.
 Suppose there are 
\begin_inset Formula $N$
\end_inset

 boxes.
 Alice requests Bob to send 
\begin_inset Formula $\alpha N$
\end_inset

 of these (where 
\begin_inset Formula $\alpha$
\end_inset

 is say 
\begin_inset Formula $0.5$
\end_inset

), chosen at random, for testing.
 Of the 
\begin_inset Formula $N'=(1-\alpha)N$
\end_inset

 boxes left, Bob requests Alice to send all but one of these to be tested.
 The has a CHSH state and measurements.
 This conclusion is false (at least for games that only succeed probabilisticall
y, i.e.
 there is a finite probability of losing the game even with the ideal boxes).
\end_layout

\begin_layout Standard
The conclusion holds if Alice is cheating.
 Intuitively, this is because the first stage becomes irrelevant and in
 the second stage, Bob randomly asks for all but 
\begin_inset Formula $1$
\end_inset

 box which doesn't leave Alice with much room for deviating from CHSH in
 the large 
\begin_inset Formula $N'$
\end_inset

 limit.
 However, Bob can almost always get away with using an arbitrary box.
 Intuitively, his strategy is the following.
 Suppose 
\begin_inset Formula $\alpha N$
\end_inset

 is large.
 Bob constructs 
\begin_inset Formula $N$
\end_inset

 CHSH boxes.
 He replaces a 
\begin_inset Formula $\beta$
\end_inset

 fraction (where 
\begin_inset Formula $\beta$
\end_inset

 is close to zero) of these boxes with his cheating boxes so that the likelihood
 of having at least one box in a randomly picked 
\begin_inset Formula $(1-\alpha)N$
\end_inset

 sized subset of 
\begin_inset Formula $N$
\end_inset

 is close to 
\begin_inset Formula $1$
\end_inset

.
 He sends these to Alice.
 This way, when Alice tests him, he passes with a high probability.
 However, when it is his turn, with high probability, he has a cheating
 box still remaining.
 He requests Alice to send all the other boxes so that the only remaining
 box is the cheating box.
 
\end_layout

\begin_layout Standard
The reasoning above works if the test was like a CHSH test where it is hard
 to claim a violation if a small finite number of boxes diverge from the
 CHSH behaviour.
 However, for the GHZ case, one has to be more careful in describing Bob's
 cheating strategy and it is not a priori clear that the same strategy works.
 Suppose Bob has exactly one cheating box, in the 
\begin_inset Formula $N$
\end_inset

 boxes which he sends to Alice.
 Alice would catch him with probability 
\begin_inset Formula $\alpha$
\end_inset

, because she can randomly ask for any 
\begin_inset Formula $\alpha N$
\end_inset

 of the boxes and the probability that the cheating box is among those is
 
\begin_inset Formula $\alpha$
\end_inset

.
 So with probability 
\begin_inset Formula $1-\alpha$
\end_inset

, Alice doesn't ask for the cheating box to be tested and in that case,
 Bob can simply eliminate all the other boxes.
 So he can succeed with probability 
\begin_inset Formula $1-\alpha$
\end_inset

 using this simple strategy.
 Clearly, by choosing 
\begin_inset Formula $\alpha$
\end_inset

 sufficiently close to 
\begin_inset Formula $1$
\end_inset

, the protocol can be made secure against such attacks.
 
\end_layout

\begin_layout Standard

\series bold
Consequences.

\series default
 Being able to bidirectionally test GHZ doesn't seem to lead to any obvious
 contradiction [EDIT: It does! It leads to CF; perhaps other states don't].
 However, if one could make bidirectional rigidity work in general, it would
 mean that a CHSH state could be shared and this in turn would mean that
 SCF can be done perfectly which we know is impossible (Kitaev's proof).
 
\end_layout

\begin_layout Standard

\series bold
Speculation.

\series default
 Could it be that the states which don't correspond to perfectly winnable
 games, could in fact be tested bidirectionally and could be used to give
 CF protocols but never with perfect bias.
 Perhaps one way of proceeding is just to bound the best bias possible,
 given a certain state is shared (and only the honest player makes fixed
 measurements on it, followed by a classical protocol) and then showing
 what class of states can be bidirectionally self-tested.
 Perhaps bidirectional self-testing could be studied independently and then
 used as a subroutine in this.

\series bold
 
\series default
\emph on
Question.

\emph default
 Can one give a general result which relates bidirectional self-testing
 with the condition that a CF protocol has the same performance in both
 the device dependent and device independent case?
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features booktabs="true" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No ET
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ET
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No Rigidity
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $P_{B}^{*}\le\frac{3}{4}$
\end_inset

, 
\begin_inset Formula $P_{A}^{*}\le\cos^{2}(\pi/8)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Jamie: 
\begin_inset Formula $P_{B}^{*}\le\frac{3}{4}$
\end_inset

, 
\begin_inset Formula $P_{A}^{*}\le\cos^{2}(\pi/8)$
\end_inset

; cheat vectors?
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bob tests Rigidity 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $P_{B}^{*}\le\frac{3}{4}$
\end_inset

, 
\begin_inset Formula $P_{A}^{*}\le\cos^{2}(\pi/8)$
\end_inset

; cheat vectors may be easier to evaluate
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
?
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alice tests Rigidity
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $P_{B}^{*}\le\frac{3}{4}$
\end_inset

, 
\begin_inset Formula $P_{A}^{*}\le\cos^{2}(\pi/8)$
\end_inset

; cheat vectors may be easier to evaluate
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
?
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Variants of the various WCF protocols.
 
\begin_inset CommandInset label
LatexCommand label
name "tab:Variants-of-the-WCF-protocols"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
I have to understand the following, before I can do anything interesting.
 The 
\begin_inset Quotes eld
\end_inset

relevance
\begin_inset Quotes erd
\end_inset

 here is with respect to the values for the cheat vector.
\end_layout

\begin_layout Enumerate
Why is it irrelevant for Alice to test Bob (in addition to Bob testing Alice)?
\end_layout

\begin_layout Enumerate
Why is it irrelevant for Alice to self-test Bob? (without using the GHZ
 based optimal cheating strategy)
\end_layout

\begin_layout Enumerate
Why is it not-irrelevant for Bob to self-test Alice? (again, without relying
 on the GHZ based optimal cheating strategy argument).
\end_layout

\begin_layout Plain Layout
I need to understand these precisely because they will have repercussions
 on the cheat vectors.
\end_layout

\begin_layout Plain Layout
Another thing I realised is that self-testing can at most guarantee that
 the state is GHZ and the honest party makes the right measurements.
 The dishonest party can of course change the measurement (the last box
 after the others have been tested can be tampered, although the box with
 the other party can't be).
 So these are what would constitute the variables, when the player that
 is self-tested is dishonest.
 What happens in the other case, should be harder to characterise.
 This in turn is related to which self-testing was irrelevant (for this
 I need Jamie's argument).
 If indeed, it is irrelevant for Alice to self-test Bob, then I should be
 able to proceed.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Subsection
ET, no Rigidity
\end_layout

\begin_layout Algorithm
\begin_inset Argument 1
status open

\begin_layout Plain Layout
WCF (ET, no rigidity)
\end_layout

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "alg:WCF_ET_noRigidity"

\end_inset

Alice has one box and Bob has two boxes (in the security analysis, we let
 the cheating player distribute the boxes).
 All the boxes take one input and give one output.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Alice chooses 
\begin_inset Formula $x\in_{R}\{0,1\}$
\end_inset

 and inputs it into her box to obtain 
\begin_inset Formula $a$
\end_inset

.
 She chooses 
\begin_inset Formula $r\in_{R}\{0,1\}$
\end_inset

 to compute 
\begin_inset Formula $s=a\oplus x.r$
\end_inset

 and sends 
\begin_inset Formula $s$
\end_inset

 to Bob.
\end_layout

\begin_layout Enumerate
Bob chooses 
\begin_inset Formula $g\in_{R}\{0,1\}$
\end_inset

 and sends it to Alice.
\end_layout

\begin_layout Enumerate
Alice sends 
\begin_inset Formula $x$
\end_inset

 to Bob.
 They both compute the output 
\begin_inset Formula $x\oplus g$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
Test Rounds.
\end_layout

\begin_deeper
\begin_layout Enumerate
If 
\begin_inset Formula $x\oplus g=0$
\end_inset

 (i.e.
 the outcome for Alice winning) Alice sends 
\begin_inset Formula $a$
\end_inset

 to Bob (to convince him that she did not cheat).
\end_layout

\begin_deeper
\begin_layout Enumerate
Bob checks if 
\begin_inset Formula $s=a$
\end_inset

 or 
\begin_inset Formula $s=a\oplus x$
\end_inset

.
 He aborts if the test fails.
\end_layout

\begin_layout Enumerate
Bob chooses 
\begin_inset Formula $y,z\in_{R}\{0,1\}$
\end_inset

 such that 
\begin_inset Formula $x\oplus y\oplus z=1$
\end_inset

 and then performs a GHZ using 
\begin_inset Formula $x,y,z$
\end_inset

 as the inputs and 
\begin_inset Formula $a,b,c$
\end_inset

 as the output from the three boxes (he measures his two boxes to obtain
 the two outcomes).
 He aborts if the test fails.
\end_layout

\end_deeper
\begin_layout Enumerate
If 
\begin_inset Formula $x\oplus g=1$
\end_inset

 (i.e.
 the outcome for Bob winning) then Bob sends his boxes (Alice tries to ensure
 he didn't tamper with the boxes).
\end_layout

\begin_deeper
\begin_layout Enumerate
Alice chooses 
\begin_inset Formula $y,z\in_{R}\{0,1\}$
\end_inset

 such that 
\begin_inset Formula $a\oplus b\oplus c=1$
\end_inset

 and then performs a GHZ (like Bob did in the previous case).
 She aborts if the test fails.
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(b')
\end_layout

\end_inset

 Alice sends 
\begin_inset Formula $y,z\in_{R}\{0,1\}$
\end_inset

 to Bob and Bob returns 
\begin_inset Formula $(b,c)$
\end_inset

.
 Alice tests GHZ and aborts if it fails.
\end_layout

\end_deeper
\end_deeper
\begin_layout Remark
Recall that the GHZ test, is that 
\begin_inset Formula $a\oplus b\oplus c=xyz\oplus1$
\end_inset

, given the inputs satisfy 
\begin_inset Formula $x\oplus y\oplus z=1$
\end_inset

.
\end_layout

\begin_layout Subsubsection
Observations
\end_layout

\begin_layout Standard
Clearly, 
\begin_inset Formula $P_{A}^{*}\le\cos^{2}(\pi/8)$
\end_inset

 carries over from 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:SCFstandard"
plural "false"
caps "true"
noprefix "false"

\end_inset

.
 As for Bob, note that he is only tested if he correctly guesses Alice's
 input, 
\begin_inset Formula $x$
\end_inset

.
 We consider three special cases.
\end_layout

\begin_layout Standard

\series bold
New boxes just for passing the test.

\series default
 Suppose he already used his boxes to guess Alice's input from 
\begin_inset Formula $s$
\end_inset

.
 We give a possible strategy for him whereby he sends new boxes to Alice.
\end_layout

\begin_layout Standard
When 
\begin_inset Formula $x=0$
\end_inset

, he knows Alice's output, 
\begin_inset Formula $a=s$
\end_inset

, as well.
 He also knows that Alice will either input 
\begin_inset Formula $(y,z)=(1,0)$
\end_inset

 or 
\begin_inset Formula $(y,z)=(0,1)$
\end_inset

 to satisfy 
\begin_inset Formula $x\oplus y\oplus z=1$
\end_inset

.
 He can therefore simply send deterministic boxes that satisfy 
\begin_inset Formula $a\oplus b\oplus c=1$
\end_inset

 regardless of the input.
 
\end_layout

\begin_layout Standard
When 
\begin_inset Formula $x=1$
\end_inset

, he knows Alice's output 
\begin_inset Formula $a$
\end_inset

 was either 
\begin_inset Formula $s$
\end_inset

 or 
\begin_inset Formula $s\oplus x=s\oplus1$
\end_inset

 with equal probability.
 He assumes Alice's output is 
\begin_inset Formula $s$
\end_inset

 (and is thus right half the times).
 Suppose he is right.
 Then, he can create deterministic boxes as follows.
 When the input is 
\begin_inset Formula $(y,z)=(0,0)$
\end_inset

 the boxes output 
\begin_inset Formula $(1,1)$
\end_inset

 if 
\begin_inset Formula $a=1$
\end_inset

 and 
\begin_inset Formula $(1,0)$
\end_inset

 if 
\begin_inset Formula $a=0$
\end_inset

, so that 
\begin_inset Formula $a\oplus b\oplus c=xyz\oplus1=1$
\end_inset

.
 When the input 
\begin_inset Formula $(y,z)=(1,1)$
\end_inset

 the boxes output 
\begin_inset Formula $(1,0)$
\end_inset

 if 
\begin_inset Formula $a=0$
\end_inset

 and 
\begin_inset Formula $(0,0)$
\end_inset

 if 
\begin_inset Formula $a=1$
\end_inset

, so that 
\begin_inset Formula $a\oplus b\oplus c=xyz\oplus1=0$
\end_inset

.
 If he is wrong, worst case, he gets caught.
\end_layout

\begin_layout Standard
This strategy gives him at least a 
\begin_inset Formula $3/4$
\end_inset

 probability of passing the test, supposing he won in the first place.
 
\end_layout

\begin_layout Standard

\series bold
Optimal Cheating Strategy when Bob wasn't tested.

\series default
 We now analyse Bob's optimal cheating strategy from the case where he wasn't
 tested.
 This uses GHZ boxes.
 Bob begins by assuming that 
\begin_inset Formula $s=a$
\end_inset

 and he is right 
\begin_inset Formula $3/4$
\end_inset

 of the times (assuming Alice is honest; as we discussed above).
 He measures his boxes with 
\begin_inset Formula $(y,z)=(1,0)$
\end_inset

.
 If 
\begin_inset Formula $a\oplus b\oplus c=1$
\end_inset

 he guesses that 
\begin_inset Formula $x=0$
\end_inset

, otherwise he guesses 
\begin_inset Formula $x=1$
\end_inset

.
 This makes sense because if Alice inputted 
\begin_inset Formula $0$
\end_inset

, the GHZ test passes with certainty (see 
\begin_inset CommandInset ref
LatexCommand formatted
reference "tab:GHZ-table"
plural "false"
caps "true"
noprefix "false"

\end_inset

).
 However, if Alice inputted 
\begin_inset Formula $1$
\end_inset

, 
\begin_inset Formula $a\oplus b\oplus c$
\end_inset

 might still equal 
\begin_inset Formula $1$
\end_inset

 but with only 
\begin_inset Formula $1/2$
\end_inset

 probability (I skipped the calculation but seems right).
 So, overall then, he has a probability of 
\begin_inset Formula $3/4$
\end_inset

 for correctly guessing Alice's input.
 This was already known.
 
\end_layout

\begin_layout Standard
Assuming he does guess correctly, can he pass Alice's test with certainty?
 With all the information he has, it might not not seem too hard.
 We know that either 
\begin_inset Formula $(x,y,z)$
\end_inset

 was 
\begin_inset Formula $(0,1,0)$
\end_inset

 or it was 
\begin_inset Formula $(1,1,0)$
\end_inset

 with equal probability.
 Since Bob is getting tested, he guessed 
\begin_inset Formula $x$
\end_inset

 correctly.
 If 
\begin_inset Formula $x=0$
\end_inset

, then from 
\begin_inset CommandInset ref
LatexCommand formatted
reference "tab:GHZ-table"
plural "false"
caps "true"
noprefix "false"

\end_inset

, it is clear that Alice would input 
\begin_inset Formula $(y,z)=(1,0)$
\end_inset

 or 
\begin_inset Formula $(0,1)$
\end_inset

 but regardless, the outputs 
\begin_inset Formula $(a,b,c)$
\end_inset

 satisfy the GHZ test.
 He can thus send these boxes (assuming they show the same output regardless
 of the inputs) and pass the test with certainty.
 Now, if 
\begin_inset Formula $x=1$
\end_inset

 and he guessed correctly, it must mean that his outputs did not satisfy
 the GHZ test.
 However, since he has no information about Alice's outcome (he received
 
\begin_inset Formula $s=a\oplus r$
\end_inset

) and as he has already measured his boxes along 
\begin_inset Formula $\sigma_{y}$
\end_inset

 and 
\begin_inset Formula $\sigma_{x}$
\end_inset

 (corresponding to 
\begin_inset Formula $(y,z)=(1,0)$
\end_inset

), it seems that he can't succeed in passing the test with probability more
 than 
\begin_inset Formula $1/2$
\end_inset

.
 Thus, his overall probability of passing the test seems to be 
\begin_inset Formula $3/4$
\end_inset

, assuming he guessed correctly in the first place.
\end_layout

\begin_layout Standard

\series bold
New boxes for guessing and passing the test.

\series default
 This seems even easier than the optimal strategy that uses GHZ.
 Since Bob distributes the boxes, he programs Alice's box to always output
 
\begin_inset Formula $a=0$
\end_inset

.
 Bob always guesses that 
\begin_inset Formula $x=s$
\end_inset

.
 If 
\begin_inset Formula $x=0$
\end_inset

 then he is indeed correct because 
\begin_inset Formula $s=a=0$
\end_inset

.
 If 
\begin_inset Formula $x=1$
\end_inset

 then 
\begin_inset Formula $s=a\oplus r=r$
\end_inset

 so his guess is right half the times.
 Overall, he guesses correctly 
\begin_inset Formula $3/4$
\end_inset

 of the times.
 How can he pass Alice's test? Since Bob is tested when he guesses correctly,
 he knows 
\begin_inset Formula $x$
\end_inset

 and that 
\begin_inset Formula $a=0$
\end_inset

 by construction.
 
\end_layout

\begin_layout Itemize
Suppose 
\begin_inset Formula $x=1$
\end_inset

.
 
\end_layout

\begin_deeper
\begin_layout Itemize
Note that Alice will either input 
\begin_inset Formula $y=z=0$
\end_inset

 or 
\begin_inset Formula $y=z=1$
\end_inset

 to satisfy 
\begin_inset Formula $x\oplus y\oplus z=1$
\end_inset

.
 
\end_layout

\begin_layout Itemize
Bob has to ensure, then, that 
\begin_inset Formula $b\oplus c=1$
\end_inset

 when 
\begin_inset Formula $y=z=0$
\end_inset

 and 
\begin_inset Formula $b\oplus c=0$
\end_inset

 when 
\begin_inset Formula $y=z=1$
\end_inset

.
 
\end_layout

\begin_layout Itemize
He sets 
\begin_inset Formula $c=1$
\end_inset

 (the last box always outputs one).
 He sets 
\begin_inset Formula $b=y$
\end_inset

.
 
\begin_inset Newline newline
\end_inset

Or equivalently, he could set 
\begin_inset Formula $c=0$
\end_inset

 and 
\begin_inset Formula $b=\bar{y}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Itemize
Suppose 
\begin_inset Formula $x=0$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
To pass the test, if 
\begin_inset Formula $x=1$
\end_inset

, he simply creates a pair of CHSH boxes which satisfy 
\begin_inset Formula $b\oplus c=yz\oplus1=1$
\end_inset

 (since 
\begin_inset Formula $yz=0$
\end_inset

 because Alice only uses 
\begin_inset Formula $x\oplus y\oplus z=1$
\end_inset

 and 
\begin_inset Formula $x$
\end_inset

 is already 
\begin_inset Formula $1$
\end_inset

; BUT why can't 
\begin_inset Formula $y=z=1$
\end_inset

?) and if 
\begin_inset Formula $x=0$
\end_inset

, h
\end_layout

\end_inset

He creates deterministic boxes satisfying 
\begin_inset Formula $b\oplus c=1$
\end_inset

 regardless of the input.
 
\end_layout

\end_deeper
\begin_layout Standard
Clearly, he passes Alice's test with certainty.
\end_layout

\begin_layout Standard

\series bold
Conclusion.

\series default
 Evidently, Bob can cheat optimally and pass Alice's test by using the strategy
 described above (optimal because for a possibly weaker protocol, 
\begin_inset Formula $P_{B}^{*}\le3/4$
\end_inset

 and we found a strategy which saturates the bound in an a priori stronger
 protocol).
 However, if Bob is forced to use a GHZ state (which can be enforced by
 rigidity) then one might be able to lower 
\begin_inset Formula $P_{B}^{*}$
\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="5">
<features booktabs="true" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $x$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $y$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $z$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $xyz\oplus1$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
The values for which 
\begin_inset Formula $x\oplus y\oplus z=1$
\end_inset

, 
\begin_inset Formula $a\oplus b\oplus c$
\end_inset

 must equal the last column for a GHZ test to pass.
\begin_inset CommandInset label
LatexCommand label
name "tab:GHZ-table"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Security Analysis
\end_layout

\begin_layout Standard
We defer the complete security analysis for this case to the end.
 This is because, as suggested by the discussion above, self-testing Bob
 and performing the extra test, might yield a smaller 
\begin_inset Formula $P_{B}^{*}$
\end_inset

 and then one can construct a better protocol by using the standard composition
 technique.
 This saves us the effort of finding the cheat vectors (assuming of course,
 it works).
\end_layout

\begin_layout Lemma
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Security of WCF
\end_layout

\end_inset

 Standard Security: Need to do Bob's part again; Alice's should carry over.
 Need to do both Alice and Bob to characterise the sets 
\begin_inset Formula $\mathcal{A}_{c}$
\end_inset

 and 
\begin_inset Formula $\mathcal{B}_{c}$
\end_inset

 in addition to the usual things.
\end_layout

\begin_layout Subsection
ET and Alice tests Rigidity (i.e.
 Bob is self-tested)
\end_layout

\begin_layout Algorithm
\begin_inset Argument 1
status open

\begin_layout Plain Layout
WCF (ET, Alice tests rigidity)
\end_layout

\end_inset

 Before the protocol begins, Bob distributes 
\begin_inset Formula $N$
\end_inset

 boxes and Alice does a rigidity test on 
\begin_inset Formula $N-1$
\end_inset

 randomly chosen boxes.
 If any test fails, Alice aborts.
 They then proceed as in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:WCF_ET_noRigidity"
plural "false"
caps "true"
noprefix "false"

\end_inset

.
 
\end_layout

\begin_layout Subsubsection
Using SDPs
\end_layout

\begin_layout Standard
The analysis for a malicious Alice stays unchanged.
 For a malicious Bob, however, the primary simplification is that we can
 assume the state in the boxes is 
\begin_inset Formula $\left|\psi\right\rangle =\frac{\left|000\right\rangle +\left|111\right\rangle }{\sqrt{2}}$
\end_inset

 and that Alice measures along 
\begin_inset Formula $\sigma_{z}/\sigma_{y}$
\end_inset

.
 We simulate the classical communication using noiseless quantum communication
 (TODO: discuss these in more detail later).
 We suppose that the initial state is 
\begin_inset Formula 
\begin{equation}
\left|\psi_{1}\right\rangle :=\left|\psi\right\rangle _{ABC}\left(\frac{\left|001\right\rangle \left|01\right\rangle +\left|010\right\rangle \left|10\right\rangle +\left|100\right\rangle \left|00\right\rangle +\left|111\right\rangle \left|11\right\rangle }{\sqrt{4}}\right)_{X'Y'Z'Y''Z''}\left|0\right\rangle _{A'}\left|00\right\rangle _{S'S''}\left(\frac{\left|0\right\rangle +\left|1\right\rangle }{\sqrt{2}}\right)_{R'}\label{eq:psi1}
\end{equation}

\end_inset

where the distribution of the systems/registers, initially, is as follows.
 Alice possesses register 
\begin_inset Formula $A$
\end_inset

 and Bob possesses the registers 
\begin_inset Formula $BC$
\end_inset

.
 All the remaining registers are assumed to be with Alice.
 The primes are used to indicate that they correspond to classical communication
 (and randomness).
 In the SDP formulation, then, we note that 
\begin_inset Formula 
\[
\rho_{1}=\tr_{BC}\left|\psi_{1}\right\rangle \left\langle \psi_{1}\right|
\]

\end_inset

 (strictly speaking, it should really by 
\begin_inset Formula $\rho_{1}=\tr_{BC}\left(\left|\psi_{1}\right\rangle \left\langle \psi_{1}\right|\right)$
\end_inset

 because Alice doesn't have the systems 
\begin_inset Formula $B$
\end_inset

 and 
\begin_inset Formula $C$
\end_inset

 but because of the preceding self-testing step, she knows what the state
 must be).
 According to the protocol, since Alice is honest (remember, we are analysing
 for a malicious Bob), she is supposed 
\end_layout

\begin_layout Itemize
to choose a random number 
\begin_inset Formula $x$
\end_inset

 and input this into the box to obtain the outcome 
\begin_inset Formula $a$
\end_inset

.
\end_layout

\begin_layout Itemize
She then sends 
\begin_inset Formula $s=a\oplus x\cdot r$
\end_inset

 to Bob.
\end_layout

\begin_layout Standard
Since, later, she also has to choose 
\begin_inset Formula $y,z$
\end_inset

 consistent with 
\begin_inset Formula $x\oplus y\oplus z=1$
\end_inset

, without loss of generality, we assume she already chose these from the
 beginning.
 Further, we assume she chose them quantumly (because if we start using
 mixed states to simulate classical randomness, then the SDP formalism allows
 Bob to hold a purification which yields a trivial bias).
 We thus write the random choice as the state present in the 
\begin_inset Formula $X'Y'Z'$
\end_inset

 registers (one could imagine the register being 
\begin_inset Formula $X'Y'Z'X''Y''Z''$
\end_inset

 and the state as 
\begin_inset Formula $\left|001\right\rangle \left|001\right\rangle +\left|010\right\rangle \left|010\right\rangle \dots$
\end_inset

 so that tracing out one part yields the classical mixture we want while
 also ensuring Bob doesn't have access to it; this increases the dimension
 of the problem and so to keep it low, we only retain 
\begin_inset Formula $X'Y'Z'$
\end_inset

; TODO: rewrite this part because now I am using 
\begin_inset Formula $Y'$
\end_inset

, 
\begin_inset Formula $Z'$
\end_inset

 but this only changes the notation, the idea remains the same).
 We simulate the measurement using a unitary 
\begin_inset Formula $U_{1}$
\end_inset

 (the details constitute the next section) which does the following two
 things: First it uses 
\begin_inset Formula $X'$
\end_inset

 as control and encodes the outcome of the measurement in 
\begin_inset Formula $A'$
\end_inset

.
 Then, it uses 
\begin_inset Formula $X'$
\end_inset

, 
\begin_inset Formula $R'$
\end_inset

 and 
\begin_inset Formula $A'$
\end_inset

 as controls and encodes the output of the function 
\begin_inset Formula $s=a\oplus x\cdot r$
\end_inset

 into 
\begin_inset Formula $S'S''$
\end_inset

, i.e.
 it stores the same value in both 
\begin_inset Formula $S'$
\end_inset

 and 
\begin_inset Formula $S''$
\end_inset

 as 
\begin_inset Formula $\left|ss\right\rangle _{S'S''}$
\end_inset

.
 The state at the end of this is denoted by 
\begin_inset Formula 
\[
\rho_{2}=U_{1}\rho_{1}U_{1}^{\dagger}.
\]

\end_inset

At this point, Alice sends the register 
\begin_inset Formula $S'$
\end_inset

 to Bob and Bob sends the register 
\begin_inset Formula $G'$
\end_inset

 (which contains the 
\begin_inset Quotes eld
\end_inset

guess
\begin_inset Quotes erd
\end_inset

 if he is cheating, a random bit if he is honest).
 This is because the protocol at this point is that 
\end_layout

\begin_layout Itemize
Bob sends a random number 
\begin_inset Formula $g$
\end_inset

 to Alice.
\end_layout

\begin_layout Standard
The most general strategy Bob can play, at this point, is to give any arbitrary
 state 
\begin_inset Formula $\rho_{3}$
\end_inset

 over the registers 
\begin_inset Formula $AA'X'Y'Z'Y''Z''S''G'$
\end_inset

, constrained only by the fact that he can't touch Alice's laboratory, i.e.
 
\begin_inset Formula 
\[
\rho_{3},\text{ s.t. }\tr_{S'}(\rho_{2})=\tr_{G'}(\rho_{3}).
\]

\end_inset


\end_layout

\begin_layout Standard
Since we are interested in Bob's probability of success, we note
\end_layout

\begin_layout Itemize
if 
\begin_inset Formula $x\oplus g=0$
\end_inset

 then Alice sends 
\begin_inset Formula $y,z$
\end_inset

 to Bob and he responds with 
\begin_inset Formula $b'',c''$
\end_inset

.
 Alice accepts that Bob won if the GHZ test succeeds with 
\begin_inset Formula $x,y,z$
\end_inset

 as the input and 
\begin_inset Formula $a',b',c'$
\end_inset

 as the outputs.
\end_layout

\begin_layout Standard
Thus, Alice sends 
\begin_inset Formula $Y'$
\end_inset

 and 
\begin_inset Formula $Z'$
\end_inset

 to Bob while Bob returns registers 
\begin_inset Formula $B'$
\end_inset

 and 
\begin_inset Formula $C'$
\end_inset

 with his responses.
 Again, this means he sends an arbitrary state 
\begin_inset Formula $\rho_{4}$
\end_inset

 over the registers 
\begin_inset Formula $AA'B'C'X'Y''Z''S''G'$
\end_inset

, constrained only by the fact that he, again, can't influence Alice's laborator
y, i.e.
\begin_inset Formula 
\[
\rho_{4},\text{ s.t. }\tr_{Y'Z'}(\rho_{3})=\tr_{B'C'}(\rho_{4})
\]

\end_inset

and Alice declares Bob a winner with probability 
\begin_inset Formula $\tr\left(\Pi\rho_{4}\right)$
\end_inset

, where 
\begin_inset Formula $\Pi$
\end_inset

 just represents the winning condition, namely 
\begin_inset Formula $x\oplus g=1$
\end_inset

 (
\begin_inset Formula $1$
\end_inset

 is Bob wins, 
\begin_inset Formula $0$
\end_inset

 is Alice wins, by convention) and that 
\begin_inset Formula $a\oplus b\oplus c=xyz\oplus1$
\end_inset

.
 We discuss this in detail, soon enough.
 In summary then, we have 
\begin_inset Formula 
\[
\max\tr(\Pi\rho_{4})
\]

\end_inset

subject to 
\begin_inset Formula 
\begin{align*}
\tr_{B'C'}(\rho_{4}) & =\tr_{Y'Z'}(\rho_{3}),\\
\tr_{G'}(\rho_{3}) & =\tr_{S'}(\rho_{2}),\\
\rho_{2} & =U_{1}\rho_{1}U_{1}^{\dagger}\\
\rho_{1} & =\tr_{BC}(\left|\psi_{1}\right\rangle \left\langle \psi_{1}\right|)
\end{align*}

\end_inset

where 
\begin_inset Formula $\left|\psi_{1}\right\rangle $
\end_inset

 is as defined in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:psi1"
plural "false"
caps "true"
noprefix "false"

\end_inset

, 
\begin_inset Formula $U_{1}$
\end_inset

 is as defined in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:Unitary"
plural "false"
caps "true"
noprefix "false"

\end_inset

 and 
\begin_inset Formula $\Pi$
\end_inset

 is as defined in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:projector"
plural "false"
caps "true"
noprefix "false"

\end_inset

.
 For clarity, 
\begin_inset Formula 
\begin{align*}
\rho_{1},\rho_{2} & \in\text{Pos}(\mathcal{H}_{AX'Y'Z'Y''Z''A'S'S''R'})\\
\rho_{3} & \in\text{Pos}(\mathcal{H}_{AX'Y'Z'Y''Z''A'S''R'G'})\\
\rho_{4} & \in\text{Pos}(\mathcal{H}_{AX'Y''Z''A'S''R'B'C'}).
\end{align*}

\end_inset

Clearly, we can simplify this further.
 We have 
\begin_inset Formula 
\[
\max\tr(\Pi\sigma_{2})
\]

\end_inset

subject to 
\begin_inset Formula 
\begin{align*}
\tr_{B'C'}(\sigma_{2}) & =\tr_{Y'Z'}(\sigma_{1})\\
\tr_{G'}(\sigma_{1}) & =\tr_{S'BC}(U_{1}\left|\psi_{1}\right\rangle \left\langle \psi_{1}\right|U_{1}^{\dagger})
\end{align*}

\end_inset

where 
\begin_inset Formula 
\begin{align*}
\sigma_{1} & \in\text{Pos}(\mathcal{H}_{AX'Y'Z'Y''Z''A'S''R'G'})\\
\sigma_{2} & \in\text{Pos}(\mathcal{H}_{AX'Y''Z''A'S''R'B'C'}).
\end{align*}

\end_inset


\end_layout

\begin_layout Subsubsection
The Unitary and the measurement
\end_layout

\begin_layout Standard
We write 
\begin_inset Formula 
\begin{equation}
U_{1}=U_{II}U_{I}\label{eq:Unitary}
\end{equation}

\end_inset

 where 
\begin_inset Formula $U_{I}$
\end_inset

 acts on 
\begin_inset Formula $AA'$
\end_inset

 with 
\begin_inset Formula $X'$
\end_inset

 as control while 
\begin_inset Formula $U_{II}$
\end_inset

 acts on 
\begin_inset Formula $SS'$
\end_inset

 with 
\begin_inset Formula $X'R'A'$
\end_inset

 as control.
 We define
\begin_inset Formula 
\begin{align*}
U_{I} & :=\mathbb{I}_{\text{rest}}\otimes\Bigg(\left|0\right\rangle \left\langle 0\right|_{X'}\otimes\left(\Pi_{\left|0\right\rangle _{A}}\otimes\mathbb{I}_{A'}+\Pi_{\left|1\right\rangle _{A}}\otimes\hat{X}_{A'}\right)\\
 & \hfill+\left|1\right\rangle \left\langle 1\right|_{X'}\otimes\left(\Pi_{\frac{\left|0\right\rangle +i\left|1\right\rangle }{\sqrt{2}}A}\otimes\mathbb{I}_{A'}+\Pi_{\frac{\left|0\right\rangle -i\left|1\right\rangle }{\sqrt{2}}A}\otimes\hat{X}_{A'}\right)\Bigg)
\end{align*}

\end_inset

and 
\begin_inset Formula 
\[
U_{II}:=\mathbb{I}_{\text{rest}}\otimes\sum_{a,x,r\in\{0,1\}}\hat{X}_{S}^{a\oplus x.r}\otimes\hat{X}_{S'}^{a\oplus x.r}\otimes\left|axr\right\rangle \left\langle axr\right|_{A'X'R'}.
\]

\end_inset

This brings us to the final measurement.
 We have 
\begin_inset Formula 
\begin{equation}
\Pi:=\sum_{a,b,c,x,y,z\in S_{\text{GHZ}}}\left|abcxyzg\right\rangle \left\langle abcxyzg\right|_{A'B'C'X'Y''Z''G'}\label{eq:projector}
\end{equation}

\end_inset

where 
\begin_inset Formula $S_{\text{GHZ}}=\{(a,b,c,x,y,z,g):x\oplus g=1\text{ and }a\oplus b\oplus c=xyz\oplus1\}$
\end_inset

.
\end_layout

\begin_layout Section
Acknowledgements
\end_layout

\begin_layout Standard
This research was supported in part by Perimeter Institute for Theoretical
 Physics.
 Research at Perimeter Institute is supported by the Government of Canada
 through the Department of Innovation, Science and Economic Development
 and by the Province of Ontario through the Ministry of Research, Innovation
 and Science.
\end_layout

\begin_layout Standard
You further agree that following your visit, you will keep PI apprised of
 any manuscripts related to your visit by writing to pipublications@perimeterins
titute.ca.
 
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintCited"
bibfiles "DI_WCF_ideas"
options "plain"

\end_inset


\end_layout

\end_body
\end_document
